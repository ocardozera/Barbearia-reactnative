{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"F:\\\\Programas\\\\React\\\\Barbearia-reactnative\\\\src\\\\pages\\\\UpdateFuncionario.js\";\n\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Mytext from \"./components/Mytext\";\nimport Mytextinput from \"./components/Mytextinput\";\nimport Mybutton from \"./components/Mybutton\";\nimport { DatabaseConnection } from \"../database/database-connection\";\nvar db = DatabaseConnection.getConnection();\n\nvar UpdateFuncionario = function UpdateFuncionario(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      inputUserId = _useState2[0],\n      setInputUserId = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      userName = _useState4[0],\n      setUserName = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      userContact = _useState6[0],\n      setUserContact = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      userAddress = _useState8[0],\n      setUserAddress = _useState8[1];\n\n  var updateAllStates = function updateAllStates(name, contact, address) {\n    setUserName(name);\n    setUserContact(contact);\n    setUserAddress(address);\n  };\n\n  var searchUser = function searchUser() {\n    console.log(inputUserId);\n    db.transaction(function (tx) {\n      tx.executeSql('SELECT * FROM table_funcionario where funcionario_id = ?', [inputUserId], function (tx, results) {\n        var len = results.rows.length;\n\n        if (len > 0) {\n          var res = results.rows.item(0);\n          updateAllStates(res.funcionario_nome, res.funcionario_telefone, res.user_address);\n        } else {\n          alert('Funcionario não encontrado!');\n          updateAllStates('', '', '');\n        }\n      });\n    });\n  };\n\n  var updateUser = function updateUser() {\n    console.log(inputUserId, userName, userContact, userAddress);\n\n    if (!inputUserId) {\n      alert('Por Favor informe o Código!');\n      return;\n    }\n\n    if (!userName) {\n      alert('Por favor informe o Nome !');\n      return;\n    }\n\n    if (!userContact) {\n      alert('Por Favor informe o Telefone !');\n      return;\n    }\n\n    if (!userAddress) {\n      alert('Por Favor informe o endereço !');\n      return;\n    }\n\n    db.transaction(function (tx) {\n      tx.executeSql('UPDATE table_funcionario set funcionario_nome=?, funcionario_telefone=? where funcionario_id=?', [userName, userContact, userAddress, inputUserId], function (tx, results) {\n        console.log('Results', results.rowsAffected);\n\n        if (results.rowsAffected > 0) {\n          Alert.alert('Sucesso', 'Funcionario atualizado com sucesso !!', [{\n            text: 'Ok',\n            onPress: function onPress() {\n              return navigation.navigate('HomeScreen');\n            }\n          }], {\n            cancelable: false\n          });\n        } else alert('Erro ao atualizar o Funcionario');\n      });\n    });\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: {\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      backgroundColor: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, React.createElement(ScrollView, {\n    keyboardShouldPersistTaps: \"handled\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, React.createElement(KeyboardAvoidingView, {\n    behavior: \"padding\",\n    style: {\n      flex: 1,\n      justifyContent: 'space-between'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, React.createElement(Mytext, {\n    text: \"Filtro de Funcionario\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 15\n    }\n  }), React.createElement(Mytextinput, {\n    placeholder: \"Entre com o C\\xF3digo do Funcionario\",\n    style: {\n      padding: 10\n    },\n    onChangeText: function onChangeText(inputUserId) {\n      return setInputUserId(inputUserId);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 15\n    }\n  }), React.createElement(Mybutton, {\n    title: \"Buscar Funcionario\",\n    customClick: searchUser,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 15\n    }\n  }), React.createElement(Mytextinput, {\n    placeholder: \"Entre com o Nome\",\n    value: userName,\n    style: {\n      padding: 10\n    },\n    onChangeText: function onChangeText(userName) {\n      return setUserName(userName);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 15\n    }\n  }), React.createElement(Mytextinput, {\n    placeholder: \"Entre com o Telefone\",\n    value: '' + userContact,\n    onChangeText: function onChangeText(userContact) {\n      return setUserContact(userContact);\n    },\n    maxLength: 11,\n    style: {\n      padding: 10\n    },\n    keyboardType: \"numeric\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 15\n    }\n  }), React.createElement(Mytextinput, {\n    value: userAddress,\n    placeholder: \"Entre com o Endere\\xE7o\",\n    onChangeText: function onChangeText(userAddress) {\n      return setUserAddress(userAddress);\n    },\n    maxLength: 225,\n    numberOfLines: 5,\n    multiline: true,\n    style: {\n      textAlignVertical: 'top',\n      padding: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 15\n    }\n  }), React.createElement(Mybutton, {\n    title: \"Atualizar Funcionario\",\n    customClick: updateUser,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 15\n    }\n  }))))));\n};\n\nexport default UpdateFuncionario;","map":{"version":3,"sources":["F:/Programas/React/Barbearia-reactnative/src/pages/UpdateFuncionario.js"],"names":["React","useState","Mytext","Mytextinput","Mybutton","DatabaseConnection","db","getConnection","UpdateFuncionario","navigation","inputUserId","setInputUserId","userName","setUserName","userContact","setUserContact","userAddress","setUserAddress","updateAllStates","name","contact","address","searchUser","console","log","transaction","tx","executeSql","results","len","rows","length","res","item","funcionario_nome","funcionario_telefone","user_address","alert","updateUser","rowsAffected","Alert","text","onPress","navigate","cancelable","flex","backgroundColor","justifyContent","padding","textAlignVertical"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  View,\r\n  ScrollView,\r\n  KeyboardAvoidingView,\r\n  Alert,\r\n  SafeAreaView,\r\n  Text,\r\n} from 'react-native';\r\n\r\nimport Mytext from './components/Mytext';\r\nimport Mytextinput from './components/Mytextinput';\r\nimport Mybutton from './components/Mybutton';\r\nimport { DatabaseConnection } from '../database/database-connection';\r\n\r\nconst db = DatabaseConnection.getConnection();\r\n\r\nconst UpdateFuncionario = ({ navigation }) => {\r\n  let [inputUserId, setInputUserId] = useState('');\r\n  let [userName, setUserName] = useState('');\r\n  let [userContact, setUserContact] = useState('');\r\n  let [userAddress, setUserAddress] = useState('');\r\n\r\n  let updateAllStates = (name, contact, address) => {\r\n    setUserName(name);\r\n    setUserContact(contact);\r\n    setUserAddress(address);\r\n  };\r\n\r\n  let searchUser = () => {\r\n    console.log(inputUserId);\r\n    db.transaction((tx) => {\r\n      tx.executeSql(\r\n        'SELECT * FROM table_funcionario where funcionario_id = ?',\r\n        [inputUserId],\r\n        (tx, results) => {\r\n          var len = results.rows.length;\r\n          if (len > 0) {\r\n            let res = results.rows.item(0);\r\n            updateAllStates(\r\n              res.funcionario_nome,\r\n              res.funcionario_telefone,\r\n              res.user_address\r\n            );\r\n          } else {\r\n            alert('Funcionario não encontrado!');\r\n            updateAllStates('', '', '');\r\n          }\r\n        }\r\n      );\r\n    });\r\n  };\r\n  let updateUser = () => {\r\n    console.log(inputUserId, userName, userContact, userAddress);\r\n\r\n    if (!inputUserId) {\r\n      alert('Por Favor informe o Código!');\r\n      return;\r\n    }\r\n    if (!userName) {\r\n      alert('Por favor informe o Nome !');\r\n      return;\r\n    }\r\n    if (!userContact) {\r\n      alert('Por Favor informe o Telefone !');\r\n      return;\r\n    }\r\n    if (!userAddress) {\r\n      alert('Por Favor informe o endereço !');\r\n      return;\r\n    }\r\n\r\n    db.transaction((tx) => {\r\n      tx.executeSql(\r\n        'UPDATE table_funcionario set funcionario_nome=?, funcionario_telefone=? where funcionario_id=?',\r\n        [userName, userContact, userAddress, inputUserId],\r\n        (tx, results) => {\r\n          console.log('Results', results.rowsAffected);\r\n          if (results.rowsAffected > 0) {\r\n            Alert.alert(\r\n              'Sucesso',\r\n              'Funcionario atualizado com sucesso !!',\r\n              [\r\n                {\r\n                  text: 'Ok',\r\n                  onPress: () => navigation.navigate('HomeScreen'),\r\n                },\r\n              ],\r\n              { cancelable: false }\r\n            );\r\n          } else alert('Erro ao atualizar o Funcionario');\r\n        }\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={{ flex: 1 }}>\r\n      <View style={{ flex: 1, backgroundColor: 'white' }}>\r\n        <View style={{ flex: 1 }}>\r\n          <ScrollView keyboardShouldPersistTaps=\"handled\">\r\n            <KeyboardAvoidingView\r\n              behavior=\"padding\"\r\n              style={{ flex: 1, justifyContent: 'space-between' }}>\r\n              <Mytext text=\"Filtro de Funcionario\" />\r\n              <Mytextinput\r\n                placeholder=\"Entre com o Código do Funcionario\"\r\n                style={{ padding: 10 }}\r\n                onChangeText={\r\n                  (inputUserId) => setInputUserId(inputUserId)\r\n                }\r\n              />\r\n              <Mybutton\r\n                title=\"Buscar Funcionario\"\r\n                customClick={searchUser}\r\n              />\r\n              <Mytextinput\r\n                placeholder=\"Entre com o Nome\"\r\n                value={userName}\r\n                style={{ padding: 10 }}\r\n                onChangeText={\r\n                  (userName) => setUserName(userName)\r\n                }\r\n              />\r\n              <Mytextinput\r\n                placeholder=\"Entre com o Telefone\"\r\n                value={'' + userContact}\r\n                onChangeText={\r\n                  (userContact) => setUserContact(userContact)\r\n                }\r\n                maxLength={11}\r\n                style={{ padding: 10 }}\r\n                keyboardType=\"numeric\"\r\n              />\r\n              <Mytextinput\r\n                value={userAddress}\r\n                placeholder=\"Entre com o Endereço\"\r\n                onChangeText={\r\n                  (userAddress) => setUserAddress(userAddress)\r\n                }\r\n                maxLength={225}\r\n                numberOfLines={5}\r\n                multiline={true}\r\n                style={{ textAlignVertical: 'top', padding: 10 }}\r\n              />\r\n              <Mybutton\r\n                title=\"Atualizar Funcionario\"\r\n                customClick={updateUser}\r\n              />\r\n            </KeyboardAvoidingView>\r\n          </ScrollView>\r\n        </View>\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nexport default UpdateFuncionario;"]},"metadata":{},"sourceType":"module"}