{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"F:\\\\Programas\\\\React\\\\Barbearia-reactnative\\\\src\\\\pages\\\\servico-realizado\\\\RegisterServicoRealizado.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport Mytextinput from \"../components/Mytextinput\";\nimport Mybutton from \"../components/Mybutton\";\nimport { DatabaseConnection } from \"../../database/database-connection\";\nvar db = DatabaseConnection.getConnection();\nvar listaFuncionarios = [];\n\nfunction buscaFuncionarios() {\n  if (listaFuncionarios.length == 0) {\n    useEffect(function () {\n      db.transaction(function (tx) {\n        tx.executeSql('SELECT * FROM table_funcionario', [], function (tx, results) {\n          var temp = [];\n\n          for (var i = 0; i < results.rows.length; ++i) {\n            listaFuncionarios.push(results.rows.item(i));\n          }\n        });\n      });\n    }, []);\n  }\n}\n\nvar RegisterServicoRealizado = function RegisterServicoRealizado(_ref) {\n  var navigation, _useState, _useState2, nomeFuncionario, setFuncionario, _useState3, _useState4, nomeCliente, setNomeCliente, _useState5, _useState6, nomeServico, setNomeServico, _useState7, _useState8, precoServico, setPrecoServico, _useState9, _useState10, selectedValue, setSelectedValue, register_user;\n\n  return _regeneratorRuntime.async(function RegisterServicoRealizado$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          navigation = _ref.navigation;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(buscaFuncionarios());\n\n        case 3:\n          _useState = useState(''), _useState2 = _slicedToArray(_useState, 2), nomeFuncionario = _useState2[0], setFuncionario = _useState2[1];\n          _useState3 = useState(''), _useState4 = _slicedToArray(_useState3, 2), nomeCliente = _useState4[0], setNomeCliente = _useState4[1];\n          _useState5 = useState(''), _useState6 = _slicedToArray(_useState5, 2), nomeServico = _useState6[0], setNomeServico = _useState6[1];\n          _useState7 = useState(''), _useState8 = _slicedToArray(_useState7, 2), precoServico = _useState8[0], setPrecoServico = _useState8[1];\n          _useState9 = useState(''), _useState10 = _slicedToArray(_useState9, 2), selectedValue = _useState10[0], setSelectedValue = _useState10[1];\n\n          register_user = function register_user() {\n            console.log(nomeServico, precoServico, setNomeCliente, setFuncionario);\n\n            if (!nomeFuncionario) {\n              alert('Por favor preencha o nome do Funcionario!');\n              return;\n            }\n\n            if (!nomeCliente) {\n              alert('Por favor preencha o nome do Cliente!');\n              return;\n            }\n\n            if (!nomeServico) {\n              alert('Por favor preencha o nome do Serviço!');\n              return;\n            }\n\n            if (!precoServico) {\n              alert('Por favor preencha o preço do serviço!');\n              return;\n            }\n\n            db.transaction(function (tx) {\n              tx.executeSql('INSERT INTO table_servico_realizado (funcionario_nome, cliente_nome, nome_servico, preco_servico) VALUES (?,?)', [nomeServico, precoServico], function (tx, results) {\n                console.log('Results', results.rowsAffected);\n\n                if (results.rowsAffected > 0) {\n                  Alert.alert('Sucesso', 'Serviço Realizado Registrado com Sucesso !!!', [{\n                    text: 'Ok',\n                    onPress: function onPress() {\n                      return navigation.navigate('HomeScreenServicoRealizado');\n                    }\n                  }], {\n                    cancelable: false\n                  });\n                } else alert('Erro ao tentar Registrar o Serviço Realizado!!!');\n              });\n            });\n          };\n\n          return _context.abrupt(\"return\", React.createElement(SafeAreaView, {\n            style: {\n              flex: 1\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 9\n            }\n          }, React.createElement(View, {\n            style: {\n              flex: 1,\n              backgroundColor: 'white'\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 13\n            }\n          }, React.createElement(View, {\n            style: {\n              flex: 1\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }\n          }, React.createElement(Picker, {\n            style: {\n              height: 50,\n              width: 150\n            },\n            selectedValue: listaFuncionarios,\n            onValueChange: function onValueChange(itemValue, itemIndex) {\n              return setSelectedValue(itemValue);\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 21\n            }\n          }, listaFuncionarios.map(function (v) {\n            return React.createElement(Picker.Item, {\n              label: v.funcionario_nome,\n              value: v.funcionario_id,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 36\n              }\n            });\n          })), React.createElement(ScrollView, {\n            keyboardShouldPersistTaps: \"handled\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 21\n            }\n          }, React.createElement(KeyboardAvoidingView, {\n            behavior: \"padding\",\n            style: {\n              flex: 1,\n              justifyContent: 'space-between'\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 25\n            }\n          }, React.createElement(Mytextinput, {\n            placeholder: \"Entre com o Nome do Funcion\\xE1rio\",\n            onChangeText: function onChangeText(nomeFuncionario) {\n              return setFuncionario(nomeFuncionario);\n            },\n            style: {\n              padding: 10\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 29\n            }\n          }), React.createElement(Mytextinput, {\n            placeholder: \"Entre com o Nome do Cliente\",\n            onChangeText: function onChangeText(nomeCliente) {\n              return setNomeCliente(nomeCliente);\n            },\n            style: {\n              padding: 10\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 29\n            }\n          }), React.createElement(Mytextinput, {\n            placeholder: \"Entre com o Nome do Servi\\xE7o\",\n            onChangeText: function onChangeText(nomeServico) {\n              return setNomeServico(nomeServico);\n            },\n            style: {\n              padding: 10\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 29\n            }\n          }), React.createElement(Mytextinput, {\n            placeholder: \"Entre com o valor do servi\\xE7o\",\n            onChangeText: function onChangeText(precoServico) {\n              return setPrecoServico(precoServico);\n            },\n            maxLength: 11,\n            keyboardType: \"numeric\",\n            style: {\n              padding: 10\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 29\n            }\n          }), React.createElement(Mybutton, {\n            title: \"Salvar\",\n            customClick: register_user,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 29\n            }\n          })))))));\n\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default RegisterServicoRealizado;","map":{"version":3,"sources":["F:/Programas/React/Barbearia-reactnative/src/pages/servico-realizado/RegisterServicoRealizado.js"],"names":["React","useState","useEffect","Mytextinput","Mybutton","DatabaseConnection","db","getConnection","listaFuncionarios","buscaFuncionarios","length","transaction","tx","executeSql","results","temp","i","rows","push","item","RegisterServicoRealizado","navigation","nomeFuncionario","setFuncionario","nomeCliente","setNomeCliente","nomeServico","setNomeServico","precoServico","setPrecoServico","selectedValue","setSelectedValue","register_user","console","log","alert","rowsAffected","Alert","text","onPress","navigate","cancelable","flex","backgroundColor","height","width","itemValue","itemIndex","map","v","funcionario_nome","funcionario_id","justifyContent","padding"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n    View,\r\n    ScrollView,\r\n    KeyboardAvoidingView,\r\n    Alert,\r\n    SafeAreaView,\r\n    Picker\r\n} from 'react-native';\r\nimport Mytextinput from '../components/Mytextinput';\r\nimport Mybutton from '../components/Mybutton';\r\nimport { DatabaseConnection } from '../../database/database-connection';\r\n\r\nconst db = DatabaseConnection.getConnection();\r\n\r\nconst listaFuncionarios = [];\r\n\r\nfunction buscaFuncionarios() {\r\n    if (listaFuncionarios.length == 0) {\r\n        useEffect(() => {\r\n            db.transaction((tx) => {\r\n                tx.executeSql(\r\n                    'SELECT * FROM table_funcionario',\r\n                    [],\r\n                    (tx, results) => {\r\n                        var temp = [];\r\n                        for (let i = 0; i < results.rows.length; ++i)\r\n                            listaFuncionarios.push(results.rows.item(i));\r\n                    }\r\n                );\r\n            });\r\n        }, []);\r\n    }\r\n}\r\n\r\nconst RegisterServicoRealizado = async ({navigation}) => {\r\n    await buscaFuncionarios();\r\n\r\n    let [nomeFuncionario, setFuncionario] = useState('');\r\n    let [nomeCliente, setNomeCliente] = useState('');\r\n    let [nomeServico, setNomeServico] = useState('');\r\n    let [precoServico, setPrecoServico] = useState('')\r\n\r\n    let [selectedValue, setSelectedValue] = useState('');\r\n\r\n\r\n    let register_user = () => {\r\n        console.log(nomeServico, precoServico, setNomeCliente, setFuncionario);\r\n\r\n        if (!nomeFuncionario) {\r\n            alert('Por favor preencha o nome do Funcionario!');\r\n            return;\r\n        }\r\n        if (!nomeCliente) {\r\n            alert('Por favor preencha o nome do Cliente!');\r\n            return;\r\n        }\r\n        if (!nomeServico) {\r\n            alert('Por favor preencha o nome do Serviço!');\r\n            return;\r\n        }\r\n        if (!precoServico) {\r\n            alert('Por favor preencha o preço do serviço!');\r\n            return;\r\n        }\r\n        db.transaction(function (tx) {\r\n            tx.executeSql(\r\n                'INSERT INTO table_servico_realizado (funcionario_nome, cliente_nome, nome_servico, preco_servico) VALUES (?,?)',\r\n                [nomeServico, precoServico],\r\n                (tx, results) => {\r\n                    console.log('Results', results.rowsAffected);\r\n                    if (results.rowsAffected > 0) {\r\n                        Alert.alert(\r\n                            'Sucesso',\r\n                            'Serviço Realizado Registrado com Sucesso !!!',\r\n                            [\r\n                                {\r\n                                    text: 'Ok',\r\n                                    onPress: () => navigation.navigate('HomeScreenServicoRealizado'),\r\n                                },\r\n                            ],\r\n                            {cancelable: false}\r\n                        );\r\n                    } else alert('Erro ao tentar Registrar o Serviço Realizado!!!');\r\n                }\r\n            );\r\n        });\r\n    };\r\n\r\n    return (\r\n        <SafeAreaView style={{flex: 1}}>\r\n            <View style={{flex: 1, backgroundColor: 'white'}}>\r\n                <View style={{flex: 1}}>\r\n\r\n                    <Picker\r\n                        style={{height: 50, width: 150}}\r\n                        selectedValue={listaFuncionarios}\r\n                        onValueChange={(itemValue, itemIndex) => setSelectedValue(itemValue)}>{\r\n                        listaFuncionarios.map((v) => {\r\n                            return <Picker.Item label={v.funcionario_nome} value={v.funcionario_id}/>\r\n                        })\r\n                    }\r\n                    </Picker>\r\n\r\n                    <ScrollView keyboardShouldPersistTaps=\"handled\">\r\n\r\n                        <KeyboardAvoidingView\r\n                            behavior=\"padding\"\r\n                            style={{flex: 1, justifyContent: 'space-between'}}>\r\n\r\n                            <Mytextinput\r\n                                placeholder=\"Entre com o Nome do Funcionário\"\r\n                                onChangeText={\r\n                                    (nomeFuncionario) => setFuncionario(nomeFuncionario)\r\n                                }\r\n                                style={{padding: 10}}\r\n                            />\r\n                            <Mytextinput\r\n                                placeholder=\"Entre com o Nome do Cliente\"\r\n                                onChangeText={\r\n                                    (nomeCliente) => setNomeCliente(nomeCliente)\r\n                                }\r\n                                style={{padding: 10}}\r\n                            />\r\n                            <Mytextinput\r\n                                placeholder=\"Entre com o Nome do Serviço\"\r\n                                onChangeText={\r\n                                    (nomeServico) => setNomeServico(nomeServico)\r\n                                }\r\n                                style={{padding: 10}}\r\n                            />\r\n                            <Mytextinput\r\n                                placeholder=\"Entre com o valor do serviço\"\r\n                                onChangeText={\r\n                                    (precoServico) => setPrecoServico(precoServico)\r\n                                }\r\n                                maxLength={11}\r\n                                keyboardType=\"numeric\"\r\n                                style={{padding: 10}}\r\n                            />\r\n                            <Mybutton title=\"Salvar\" customClick={register_user}/>\r\n                        </KeyboardAvoidingView>\r\n                    </ScrollView>\r\n                </View>\r\n            </View>\r\n        </SafeAreaView>\r\n    );\r\n};\r\n\r\n// const styles = StyleSheet.create({\r\n//   textheader: {\r\n//     color: '#111',\r\n//     fontSize: 12,\r\n//     fontWeight: '700',\r\n//\r\n//   },\r\n//   textbottom: {\r\n//     color: '#111',\r\n//     fontSize: 18,\r\n//   },\r\n// });\r\n\r\nexport default RegisterServicoRealizado;"]},"metadata":{},"sourceType":"module"}