{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Mytext from \"../components/Mytext\";\nimport Mytextinput from \"../components/Mytextinput\";\nimport Mybutton from \"../components/Mybutton\";\nimport { DatabaseConnection } from \"../../database/database-connection\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar db = DatabaseConnection.getConnection();\n\nvar ViewServicoRealizado = function ViewServicoRealizado() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      inputServicoId = _useState2[0],\n      setInputServicoId = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      servicoData = _useState4[0],\n      setServicoData = _useState4[1];\n\n  var searchUser = function searchUser() {\n    console.log(inputServicoId);\n    setServicoData({});\n    db.transaction(function (tx) {\n      tx.executeSql('SELECT tbs.servico_realizado_id, tbs.cliente_nome, tf.funcionario_nome, tts.nome_servico, tts.preco_servico FROM table_servico_realizado tbs, table_funcionario tf, table_tipo_servico tts WHERE tbs.servico_realizado_id = ? AND tbs.funcionario_id = tf.funcionario_id AND tbs.tipo_servico_id = tts.tipo_servico_id;\\n', [inputServicoId], function (tx, results) {\n        var len = results.rows.length;\n        console.log('len', len);\n\n        if (len > 0) {\n          setServicoData(results.rows.item(0));\n        } else {\n          alert('Tipo de serviço não encontrado !');\n        }\n      });\n    });\n  };\n\n  return _jsx(SafeAreaView, {\n    style: {\n      flex: 1\n    },\n    children: _jsx(View, {\n      style: {\n        flex: 1,\n        backgroundColor: 'white'\n      },\n      children: _jsxs(View, {\n        style: {\n          flex: 1\n        },\n        children: [_jsx(Mytextinput, {\n          placeholder: \"Digite o C\\xF3digo do Servi\\xE7o Realizado\",\n          onChangeText: function onChangeText(inputServicoId) {\n            return setInputServicoId(inputServicoId);\n          },\n          style: {\n            padding: 10\n          }\n        }), _jsx(Mybutton, {\n          title: \"Buscar Servi\\xE7o Realizado\",\n          customClick: searchUser\n        }), _jsxs(View, {\n          style: {\n            marginLeft: 35,\n            marginRight: 35,\n            marginTop: 10\n          },\n          children: [_jsxs(Text, {\n            children: [\"C\\xF3digo : \", servicoData.servico_realizado_id]\n          }), _jsxs(Text, {\n            children: [\"Nome Cliente : \", servicoData.cliente_nome]\n          }), _jsxs(Text, {\n            children: [\"Nome Funcion\\xE1rio : \", servicoData.funcionario_nome]\n          }), _jsxs(Text, {\n            children: [\"Nome Servi\\xE7o : \", servicoData.nome_servico]\n          }), _jsxs(Text, {\n            children: [\"Pre\\xE7o do Servi\\xE7o : \", servicoData.preco_servico]\n          })]\n        })]\n      })\n    })\n  });\n};\n\nexport default ViewServicoRealizado;","map":{"version":3,"sources":["F:/Programas/React/Barbearia-reactnative/src/pages/servico-realizado/ViewServicoRealizado.js"],"names":["React","useState","Mytext","Mytextinput","Mybutton","DatabaseConnection","db","getConnection","ViewServicoRealizado","inputServicoId","setInputServicoId","servicoData","setServicoData","searchUser","console","log","transaction","tx","executeSql","results","len","rows","length","item","alert","flex","backgroundColor","padding","marginLeft","marginRight","marginTop","servico_realizado_id","cliente_nome","funcionario_nome","nome_servico","preco_servico"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAEA,OAAOC,MAAP;AACA,OAAOC,WAAP;AACA,OAAOC,QAAP;AACA,SAASC,kBAAT;;;AAEA,IAAMC,EAAE,GAAGD,kBAAkB,CAACE,aAAnB,EAAX;;AAEA,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,GAAM;AAAA,kBACWP,QAAQ,CAAC,EAAD,CADnB;AAAA;AAAA,MAC1BQ,cAD0B;AAAA,MACVC,iBADU;;AAAA,mBAEKT,QAAQ,CAAC,EAAD,CAFb;AAAA;AAAA,MAE1BU,WAF0B;AAAA,MAEbC,cAFa;;AAI/B,MAAIC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACnBC,IAAAA,OAAO,CAACC,GAAR,CAAYN,cAAZ;AACAG,IAAAA,cAAc,CAAC,EAAD,CAAd;AACAN,IAAAA,EAAE,CAACU,WAAH,CAAe,UAACC,EAAD,EAAQ;AACnBA,MAAAA,EAAE,CAACC,UAAH,CAEI,2TAFJ,EAGI,CAACT,cAAD,CAHJ,EAII,UAACQ,EAAD,EAAKE,OAAL,EAAiB;AACb,YAAIC,GAAG,GAAGD,OAAO,CAACE,IAAR,CAAaC,MAAvB;AACAR,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBK,GAAnB;;AACA,YAAIA,GAAG,GAAG,CAAV,EAAa;AACTR,UAAAA,cAAc,CAACO,OAAO,CAACE,IAAR,CAAaE,IAAb,CAAkB,CAAlB,CAAD,CAAd;AACH,SAFD,MAEO;AACHC,UAAAA,KAAK,CAAC,kCAAD,CAAL;AACH;AACJ,OAZL;AAcH,KAfD;AAgBH,GAnBD;;AAqBA,SACI,KAAC,YAAD;AAAc,IAAA,KAAK,EAAE;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAArB;AAAA,cACI,KAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEA,QAAAA,IAAI,EAAE,CAAR;AAAWC,QAAAA,eAAe,EAAE;AAA5B,OAAb;AAAA,gBACI,MAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAED,UAAAA,IAAI,EAAE;AAAR,SAAb;AAAA,mBACI,KAAC,WAAD;AACI,UAAA,WAAW,EAAC,4CADhB;AAEI,UAAA,YAAY,EACR,sBAAChB,cAAD;AAAA,mBAAoBC,iBAAiB,CAACD,cAAD,CAArC;AAAA,WAHR;AAKI,UAAA,KAAK,EAAE;AAAEkB,YAAAA,OAAO,EAAE;AAAX;AALX,UADJ,EAQI,KAAC,QAAD;AAAU,UAAA,KAAK,EAAC,6BAAhB;AAA2C,UAAA,WAAW,EAAEd;AAAxD,UARJ,EASI,MAAC,IAAD;AACI,UAAA,KAAK,EAAE;AACHe,YAAAA,UAAU,EAAE,EADT;AAEHC,YAAAA,WAAW,EAAE,EAFV;AAGHC,YAAAA,SAAS,EAAE;AAHR,WADX;AAAA,qBAMI,MAAC,IAAD;AAAA,uCAAgBnB,WAAW,CAACoB,oBAA5B;AAAA,YANJ,EAOI,MAAC,IAAD;AAAA,0CAAsBpB,WAAW,CAACqB,YAAlC;AAAA,YAPJ,EAQI,MAAC,IAAD;AAAA,iDAA0BrB,WAAW,CAACsB,gBAAtC;AAAA,YARJ,EASI,MAAC,IAAD;AAAA,6CAAsBtB,WAAW,CAACuB,YAAlC;AAAA,YATJ,EAUI,MAAC,IAAD;AAAA,oDAA0BvB,WAAW,CAACwB,aAAtC;AAAA,YAVJ;AAAA,UATJ;AAAA;AADJ;AADJ,IADJ;AA4BH,CArDD;;AAuDA,eAAe3B,oBAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { Text, View, SafeAreaView } from 'react-native';\r\nimport Mytext from '../components/Mytext';\r\nimport Mytextinput from '../components/Mytextinput';\r\nimport Mybutton from '../components/Mybutton';\r\nimport { DatabaseConnection } from '../../database/database-connection';\r\n\r\nconst db = DatabaseConnection.getConnection();\r\n\r\nconst ViewServicoRealizado = () => {\r\n    let [inputServicoId, setInputServicoId] = useState('');\r\n    let [servicoData, setServicoData] = useState({});\r\n\r\n    let searchUser = () => {\r\n        console.log(inputServicoId);\r\n        setServicoData({});\r\n        db.transaction((tx) => {\r\n            tx.executeSql(\r\n                // 'SELECT * FROM table_tipo_servico where tipo_servico_id = ?',\r\n                'SELECT tbs.servico_realizado_id, tbs.cliente_nome, tf.funcionario_nome, tts.nome_servico, tts.preco_servico FROM table_servico_realizado tbs, table_funcionario tf, table_tipo_servico tts WHERE tbs.servico_realizado_id = ? AND tbs.funcionario_id = tf.funcionario_id AND tbs.tipo_servico_id = tts.tipo_servico_id;\\n',\r\n                [inputServicoId],\r\n                (tx, results) => {\r\n                    var len = results.rows.length;\r\n                    console.log('len', len);\r\n                    if (len > 0) {\r\n                        setServicoData(results.rows.item(0));\r\n                    } else {\r\n                        alert('Tipo de serviço não encontrado !');\r\n                    }\r\n                }\r\n            );\r\n        });\r\n    };\r\n\r\n    return (\r\n        <SafeAreaView style={{ flex: 1 }}>\r\n            <View style={{ flex: 1, backgroundColor: 'white' }}>\r\n                <View style={{ flex: 1 }}>\r\n                    <Mytextinput\r\n                        placeholder=\"Digite o Código do Serviço Realizado\"\r\n                        onChangeText={\r\n                            (inputServicoId) => setInputServicoId(inputServicoId)\r\n                        }\r\n                        style={{ padding: 10 }}\r\n                    />\r\n                    <Mybutton title=\"Buscar Serviço Realizado\" customClick={searchUser} />\r\n                    <View\r\n                        style={{\r\n                            marginLeft: 35,\r\n                            marginRight: 35,\r\n                            marginTop: 10\r\n                        }}>\r\n                        <Text>Código : {servicoData.servico_realizado_id}</Text>\r\n                        <Text>Nome Cliente : {servicoData.cliente_nome}</Text>\r\n                        <Text>Nome Funcionário : {servicoData.funcionario_nome}</Text>\r\n                        <Text>Nome Serviço : {servicoData.nome_servico}</Text>\r\n                        <Text>Preço do Serviço : {servicoData.preco_servico}</Text>\r\n                    </View>\r\n                </View>\r\n            </View>\r\n        </SafeAreaView>\r\n    );\r\n};\r\n\r\nexport default ViewServicoRealizado;"]},"metadata":{},"sourceType":"module"}