{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"F:\\\\Programas\\\\React\\\\Barbearia-reactnative\\\\src\\\\pages\\\\servico-realizado\\\\RegisterServicoRealizado.js\";\n\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport Mytextinput from \"../components/Mytextinput\";\nimport Mybutton from \"../components/Mybutton\";\nimport { DatabaseConnection } from \"../../database/database-connection\";\nimport PickerItem from \"react-native-web/dist/exports/Picker/PickerItem\";\nvar db = DatabaseConnection.getConnection();\n\nvar RegisterServicoRealizado = function RegisterServicoRealizado(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      nomeFuncionario = _useState2[0],\n      setFuncionario = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      nomeCliente = _useState4[0],\n      setNomeCliente = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      nomeServico = _useState6[0],\n      setNomeServico = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      precoServico = _useState8[0],\n      setPrecoServico = _useState8[1];\n\n  var state = {\n    nome: ''\n  };\n\n  var register_user = function register_user() {\n    console.log(nomeServico, precoServico, setNomeCliente, setFuncionario);\n\n    if (!nomeFuncionario) {\n      alert('Por favor preencha o nome do Funcionario!');\n      return;\n    }\n\n    if (!nomeCliente) {\n      alert('Por favor preencha o nome do Cliente!');\n      return;\n    }\n\n    if (!nomeServico) {\n      alert('Por favor preencha o nome do Serviço!');\n      return;\n    }\n\n    if (!precoServico) {\n      alert('Por favor preencha o preço do serviço!');\n      return;\n    }\n\n    db.transaction(function (tx) {\n      tx.executeSql('INSERT INTO table_servico_realizado (funcionario_nome, cliente_nome, nome_servico, preco_servico) VALUES (?,?)', [nomeServico, precoServico], function (tx, results) {\n        console.log('Results', results.rowsAffected);\n\n        if (results.rowsAffected > 0) {\n          Alert.alert('Sucesso', 'Serviço Realizado Registrado com Sucesso !!!', [{\n            text: 'Ok',\n            onPress: function onPress() {\n              return navigation.navigate('HomeScreenServicoRealizado');\n            }\n          }], {\n            cancelable: false\n          });\n        } else alert('Erro ao tentar Registrar o Serviço Realizado!!!');\n      });\n    });\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: {\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      backgroundColor: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, React.createElement(ScrollView, {\n    keyboardShouldPersistTaps: \"handled\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }, React.createElement(Picker, {\n    style: {\n      width: 300\n    },\n    selectedValue: _this.state.nome,\n    onValueChange: function onValueChange(itemValor, itemIndex) {\n      return _this.setState({\n        nome: itemValor\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 24\n    }\n  }, React.createElement(PickerItem.Item, {\n    label: \"Sele\\xE7\\xE3o\",\n    value: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 28\n    }\n  }), React.createElement(PickerItem.Item, {\n    label: \"Sele\\xE7\\xE3o\",\n    value: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 28\n    }\n  }), React.createElement(PickerItem.Item, {\n    label: \"Sele\\xE7\\xE3o\",\n    value: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 28\n    }\n  })), React.createElement(KeyboardAvoidingView, {\n    behavior: \"padding\",\n    style: {\n      flex: 1,\n      justifyContent: 'space-between'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 25\n    }\n  }, React.createElement(Mytextinput, {\n    placeholder: \"Entre com o Nome do Funcion\\xE1rio\",\n    onChangeText: function onChangeText(nomeFuncionario) {\n      return setFuncionario(nomeFuncionario);\n    },\n    style: {\n      padding: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 29\n    }\n  }), React.createElement(Mytextinput, {\n    placeholder: \"Entre com o Nome do Cliente\",\n    onChangeText: function onChangeText(nomeCliente) {\n      return setNomeCliente(nomeCliente);\n    },\n    style: {\n      padding: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 29\n    }\n  }), React.createElement(Mytextinput, {\n    placeholder: \"Entre com o Nome do Servi\\xE7o\",\n    onChangeText: function onChangeText(nomeServico) {\n      return setNomeServico(nomeServico);\n    },\n    style: {\n      padding: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 29\n    }\n  }), React.createElement(Mytextinput, {\n    placeholder: \"Entre com o valor do servi\\xE7o\",\n    onChangeText: function onChangeText(precoServico) {\n      return setPrecoServico(precoServico);\n    },\n    maxLength: 11,\n    keyboardType: \"numeric\",\n    style: {\n      padding: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 29\n    }\n  }), React.createElement(Mybutton, {\n    title: \"Salvar\",\n    customClick: register_user,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 29\n    }\n  }))))));\n};\n\nexport default RegisterServicoRealizado;","map":{"version":3,"sources":["F:/Programas/React/Barbearia-reactnative/src/pages/servico-realizado/RegisterServicoRealizado.js"],"names":["React","useState","Mytextinput","Mybutton","DatabaseConnection","PickerItem","db","getConnection","RegisterServicoRealizado","navigation","nomeFuncionario","setFuncionario","nomeCliente","setNomeCliente","nomeServico","setNomeServico","precoServico","setPrecoServico","state","nome","register_user","console","log","alert","transaction","tx","executeSql","results","rowsAffected","Alert","text","onPress","navigate","cancelable","flex","backgroundColor","width","itemValor","itemIndex","setState","justifyContent","padding"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n    View,\r\n    ScrollView,\r\n    KeyboardAvoidingView,\r\n    Alert,\r\n    SafeAreaView,\r\n    Picker\r\n} from 'react-native';\r\nimport Mytextinput from '../components/Mytextinput';\r\nimport Mybutton from '../components/Mybutton';\r\nimport { DatabaseConnection } from '../../database/database-connection';\r\nimport PickerItem from \"react-native-web/dist/exports/Picker/PickerItem\";\r\n\r\nconst db = DatabaseConnection.getConnection();\r\n\r\nconst RegisterServicoRealizado = ({ navigation }) => {\r\n    let [nomeFuncionario, setFuncionario] = useState('');\r\n    let [nomeCliente, setNomeCliente] = useState('');\r\n    let [nomeServico, setNomeServico] = useState('');\r\n    let [precoServico, setPrecoServico] = useState('')\r\n\r\n    let state = {\r\n        nome: ''\r\n    }\r\n\r\n    let register_user = () => {\r\n        console.log(nomeServico, precoServico, setNomeCliente, setFuncionario);\r\n\r\n        if (!nomeFuncionario) {\r\n            alert('Por favor preencha o nome do Funcionario!');\r\n            return;\r\n        }\r\n        if (!nomeCliente) {\r\n            alert('Por favor preencha o nome do Cliente!');\r\n            return;\r\n        }\r\n        if (!nomeServico) {\r\n            alert('Por favor preencha o nome do Serviço!');\r\n            return;\r\n        }\r\n        if (!precoServico) {\r\n            alert('Por favor preencha o preço do serviço!');\r\n            return;\r\n        }\r\n            db.transaction(function (tx) {\r\n            tx.executeSql(\r\n                'INSERT INTO table_servico_realizado (funcionario_nome, cliente_nome, nome_servico, preco_servico) VALUES (?,?)',\r\n                [nomeServico, precoServico],\r\n                (tx, results) => {\r\n                    console.log('Results', results.rowsAffected);\r\n                    if (results.rowsAffected > 0) {\r\n                        Alert.alert(\r\n                            'Sucesso',\r\n                            'Serviço Realizado Registrado com Sucesso !!!',\r\n                            [\r\n                                {\r\n                                    text: 'Ok',\r\n                                    onPress: () => navigation.navigate('HomeScreenServicoRealizado'),\r\n                                },\r\n                            ],\r\n                            { cancelable: false }\r\n                        );\r\n                    } else alert('Erro ao tentar Registrar o Serviço Realizado!!!');\r\n                }\r\n            );\r\n        });\r\n    };\r\n\r\n    return (\r\n        <SafeAreaView style={{flex: 1}}>\r\n            <View style={{flex: 1, backgroundColor: 'white'}}>\r\n                <View style={{flex: 1}}>\r\n                    <ScrollView keyboardShouldPersistTaps=\"handled\">\r\n                       <Picker\r\n                       style={{ width: 300 }}\r\n                       selectedValue={this.state.nome}\r\n                       onValueChange={\r\n                           (itemValor, itemIndex) => this.setState({\r\n                               nome: itemValor\r\n                           })\r\n                       }\r\n                       >\r\n                           <PickerItem.Item label=\"Seleção\" value=\"\"/>\r\n                           <PickerItem.Item label=\"Seleção\" value=\"\"/>\r\n                           <PickerItem.Item label=\"Seleção\" value=\"\"/>\r\n                       </Picker>\r\n\r\n                        <KeyboardAvoidingView\r\n                            behavior=\"padding\"\r\n                            style={{flex: 1, justifyContent: 'space-between'}}>\r\n                            <Mytextinput\r\n                                placeholder=\"Entre com o Nome do Funcionário\"\r\n                                onChangeText={\r\n                                    (nomeFuncionario) => setFuncionario(nomeFuncionario)\r\n                                }\r\n                                style={{padding: 10}}\r\n                            />\r\n                            <Mytextinput\r\n                                placeholder=\"Entre com o Nome do Cliente\"\r\n                                onChangeText={\r\n                                    (nomeCliente) => setNomeCliente(nomeCliente)\r\n                                }\r\n                                style={{padding: 10}}\r\n                            />\r\n                            <Mytextinput\r\n                                placeholder=\"Entre com o Nome do Serviço\"\r\n                                onChangeText={\r\n                                    (nomeServico) => setNomeServico(nomeServico)\r\n                                }\r\n                                style={{padding: 10}}\r\n                            />\r\n                            <Mytextinput\r\n                                placeholder=\"Entre com o valor do serviço\"\r\n                                onChangeText={\r\n                                    (precoServico) => setPrecoServico(precoServico)\r\n                                }\r\n                                maxLength={11}\r\n                                keyboardType=\"numeric\"\r\n                                style={{padding: 10}}\r\n                            />\r\n                            <Mybutton title=\"Salvar\" customClick={register_user}/>\r\n                        </KeyboardAvoidingView>\r\n                    </ScrollView>\r\n                </View>\r\n            </View>\r\n        </SafeAreaView>\r\n    );\r\n};\r\n\r\nexport default RegisterServicoRealizado;"]},"metadata":{},"sourceType":"module"}