{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\PROJETOS DEV\\\\Barbearia-reactnative\\\\src\\\\pages\\\\RegisterUser.js\";\n\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Mytextinput from \"./components/Mytextinput\";\nimport Mybutton from \"./components/Mybutton\";\nimport { DatabaseConnection } from \"../database/database-connection\";\nvar db = DatabaseConnection.getConnection();\n\nvar RegisterUser = function RegisterUser(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      userName = _useState2[0],\n      setUserName = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      userContact = _useState4[0],\n      setUserContact = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      userAddress = _useState6[0],\n      setUserAddress = _useState6[1];\n\n  var register_user = function register_user() {\n    console.log(userName, userContact, userAddress);\n\n    if (!userName) {\n      alert('Por favor preencha o nome !');\n      return;\n    }\n\n    if (!userContact) {\n      alert('Por favor preencha o contato');\n      return;\n    }\n\n    if (!userAddress) {\n      alert('Por favor preencha o endereço !');\n      return;\n    }\n\n    db.transaction(function (tx) {\n      tx.executeSql('INSERT INTO table_user (user_name, user_contact, user_address) VALUES (?,?,?)', [userName, userContact, userAddress], function (tx, results) {\n        console.log('Results', results.rowsAffected);\n\n        if (results.rowsAffected > 0) {\n          Alert.alert('Sucesso', 'Usuário Registrado com Sucesso !!!', [{\n            text: 'Ok',\n            onPress: function onPress() {\n              return navigation.navigate('HomeScreen');\n            }\n          }], {\n            cancelable: false\n          });\n        } else alert('Erro ao tentar Registrar o Usuário !!!');\n      });\n    });\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: {\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      backgroundColor: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, React.createElement(ScrollView, {\n    keyboardShouldPersistTaps: \"handled\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, React.createElement(KeyboardAvoidingView, {\n    behavior: \"padding\",\n    style: {\n      flex: 1,\n      justifyContent: 'space-between'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, React.createElement(Mytextinput, {\n    placeholder: \"Entre com o Nome\",\n    onChangeText: function onChangeText(userName) {\n      return setUserName(userName);\n    },\n    style: {\n      padding: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  }), React.createElement(Mytextinput, {\n    placeholder: \"Entre com o Telefone\",\n    onChangeText: function onChangeText(userContact) {\n      return setUserContact(userContact);\n    },\n    maxLength: 10,\n    keyboardType: \"numeric\",\n    style: {\n      padding: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  }), React.createElement(Mytextinput, {\n    placeholder: \"Entre com o Endere\\xE7o\",\n    onChangeText: function onChangeText(userAddress) {\n      return setUserAddress(userAddress);\n    },\n    maxLength: 225,\n    numberOfLines: 5,\n    multiline: true,\n    style: {\n      textAlignVertical: 'top',\n      padding: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  }), React.createElement(Mybutton, {\n    title: \"Salvar\",\n    customClick: register_user,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 15\n    }\n  }))))));\n};\n\nexport default RegisterUser;","map":{"version":3,"sources":["D:/PROJETOS DEV/Barbearia-reactnative/src/pages/RegisterUser.js"],"names":["React","useState","Mytextinput","Mybutton","DatabaseConnection","db","getConnection","RegisterUser","navigation","userName","setUserName","userContact","setUserContact","userAddress","setUserAddress","register_user","console","log","alert","transaction","tx","executeSql","results","rowsAffected","Alert","text","onPress","navigate","cancelable","flex","backgroundColor","justifyContent","padding","textAlignVertical"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {\n  View,\n  ScrollView,\n  KeyboardAvoidingView,\n  Alert,\n  SafeAreaView,\n} from 'react-native';\nimport Mytextinput from './components/Mytextinput';\nimport Mybutton from './components/Mybutton';\nimport { DatabaseConnection } from '../database/database-connection';\n\nconst db = DatabaseConnection.getConnection();\n\nconst RegisterUser = ({ navigation }) => {\n  let [userName, setUserName] = useState('');\n  let [userContact, setUserContact] = useState('');\n  let [userAddress, setUserAddress] = useState('');\n\n  let register_user = () => {\n    console.log(userName, userContact, userAddress);\n\n    if (!userName) {\n      alert('Por favor preencha o nome !');\n      return;\n    }\n    if (!userContact) {\n      alert('Por favor preencha o contato');\n      return;\n    }\n    if (!userAddress) {\n      alert('Por favor preencha o endereço !');\n      return;\n    }\n\n    db.transaction(function (tx) {\n      tx.executeSql(\n        'INSERT INTO table_user (user_name, user_contact, user_address) VALUES (?,?,?)',\n        [userName, userContact, userAddress],\n        (tx, results) => {\n          console.log('Results', results.rowsAffected);\n          if (results.rowsAffected > 0) {\n            Alert.alert(\n              'Sucesso',\n              'Usuário Registrado com Sucesso !!!',\n              [\n                {\n                  text: 'Ok',\n                  onPress: () => navigation.navigate('HomeScreen'),\n                },\n              ],\n              { cancelable: false }\n            );\n          } else alert('Erro ao tentar Registrar o Usuário !!!');\n        }\n      );\n    });\n  };\n\n  return (\n    <SafeAreaView style={{ flex: 1 }}>\n      <View style={{ flex: 1, backgroundColor: 'white' }}>\n        <View style={{ flex: 1 }}>\n          <ScrollView keyboardShouldPersistTaps=\"handled\">\n            <KeyboardAvoidingView\n              behavior=\"padding\"\n              style={{ flex: 1, justifyContent: 'space-between' }}>\n              <Mytextinput\n                placeholder=\"Entre com o Nome\"\n                onChangeText={\n                  (userName) => setUserName(userName)\n                }\n                style={{ padding: 10 }}\n              />\n              <Mytextinput\n                placeholder=\"Entre com o Telefone\"\n                onChangeText={\n                  (userContact) => setUserContact(userContact)\n                }\n                maxLength={10}\n                keyboardType=\"numeric\"\n                style={{ padding: 10 }}\n              />\n              <Mytextinput\n                placeholder=\"Entre com o Endereço\"\n                onChangeText={\n                  (userAddress) => setUserAddress(userAddress)\n                }\n                maxLength={225}\n                numberOfLines={5}\n                multiline={true}\n                style={{ textAlignVertical: 'top', padding: 10 }}\n              />\n              <Mybutton title=\"Salvar\" customClick={register_user} />\n            </KeyboardAvoidingView>\n          </ScrollView>\n        </View>\n      </View>\n    </SafeAreaView>\n  );\n};\n\nexport default RegisterUser;"]},"metadata":{},"sourceType":"module"}