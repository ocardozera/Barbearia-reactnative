{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Mytextinput from \"../components/Mytextinput\";\nimport Mybutton from \"../components/Mybutton\";\nimport { DatabaseConnection } from \"../../database/database-connection\";\nimport { TextInputMask } from \"react-native-masked-text\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar db = DatabaseConnection.getConnection();\n\nvar RegisterTipoServico = function RegisterTipoServico(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      nomeServico = _useState2[0],\n      setNomeServico = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      precoServico = _useState4[0],\n      setPrecoServico = _useState4[1];\n\n  var register_user = function register_user() {\n    console.log(nomeServico, precoServico);\n\n    if (!nomeServico) {\n      alert('Por favor preencha o nome do serviço!');\n      return;\n    }\n\n    if (!precoServico) {\n      alert('Por favor preencha o preço do serviço');\n      return;\n    }\n\n    db.transaction(function (tx) {\n      tx.executeSql('INSERT INTO table_tipo_servico (nome_servico, preco_servico) VALUES (?,?)', [nomeServico, precoServico], function (tx, results) {\n        console.log('Results', results.rowsAffected);\n\n        if (results.rowsAffected > 0) {\n          Alert.alert('Sucesso', 'Tipo de Serviço Registrado com Sucesso !!!', [{\n            text: 'Ok',\n            onPress: function onPress() {\n              return navigation.navigate('HomeScreenTipoServico');\n            }\n          }], {\n            cancelable: false\n          });\n        } else alert('Erro ao tentar Registrar o Tipo de Serviço !!!');\n      });\n    });\n  };\n\n  return _jsx(SafeAreaView, {\n    style: {\n      flex: 1\n    },\n    children: _jsx(View, {\n      style: {\n        flex: 1,\n        backgroundColor: 'white'\n      },\n      children: _jsx(View, {\n        style: {\n          flex: 1\n        },\n        children: _jsx(ScrollView, {\n          keyboardShouldPersistTaps: \"handled\",\n          children: _jsxs(KeyboardAvoidingView, {\n            behavior: \"padding\",\n            style: {\n              flex: 1,\n              justifyContent: 'space-between'\n            },\n            children: [_jsx(Mytextinput, {\n              placeholder: \"Nome do Servi\\xE7o\",\n              onChangeText: function onChangeText(nomeServico) {\n                return setNomeServico(nomeServico);\n              },\n              style: {\n                padding: 10\n              }\n            }), _jsx(TextInputMask, {\n              placeholder: \"Valor do Servi\\xE7o R$\",\n              type: 'money',\n              style: styles.inputText,\n              keyboardType: \"numeric\",\n              blurOnSubmit: false,\n              underlineColorAndroid: \"transparent\",\n              placeholderTextColor: \"#00AD98\",\n              options: {},\n              value: precoServico,\n              onChangeText: function onChangeText(precoServico) {\n                return setPrecoServico(precoServico);\n              }\n            }), _jsx(Mybutton, {\n              title: \"Salvar\",\n              customClick: register_user\n            })]\n          })\n        })\n      })\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  inputText: {\n    marginLeft: 25,\n    marginRight: 25,\n    marginTop: 10,\n    borderColor: '#00AD98',\n    borderWidth: 1,\n    height: 50,\n    padding: 10,\n    borderRadius: 20\n  }\n});\nexport default RegisterTipoServico;","map":{"version":3,"sources":["F:/Programas/React/Barbearia-reactnative/src/pages/tipo-servico/RegisterTipoServico.js"],"names":["React","useState","Mytextinput","Mybutton","DatabaseConnection","TextInputMask","db","getConnection","RegisterTipoServico","navigation","nomeServico","setNomeServico","precoServico","setPrecoServico","register_user","console","log","alert","transaction","tx","executeSql","results","rowsAffected","Alert","text","onPress","navigate","cancelable","flex","backgroundColor","justifyContent","padding","styles","inputText","StyleSheet","create","marginLeft","marginRight","marginTop","borderColor","borderWidth","height","borderRadius"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n    View,\r\n    ScrollView,\r\n    KeyboardAvoidingView,\r\n    Alert,\r\n    SafeAreaView, StyleSheet,\r\n} from 'react-native';\r\nimport Mytextinput from '../components/Mytextinput';\r\nimport Mybutton from '../components/Mybutton';\r\nimport { DatabaseConnection } from '../../database/database-connection';\r\nimport {TextInputMask} from \"react-native-masked-text\";\r\n\r\nconst db = DatabaseConnection.getConnection();\r\n\r\nconst RegisterTipoServico = ({ navigation }) => {\r\n    let [nomeServico, setNomeServico] = useState('');\r\n    let [precoServico, setPrecoServico] = useState('');\r\n\r\n\r\n    let register_user = () => {\r\n        console.log(nomeServico, precoServico);\r\n\r\n        if (!nomeServico) {\r\n            alert('Por favor preencha o nome do serviço!');\r\n            return;\r\n        }\r\n        if (!precoServico) {\r\n            alert('Por favor preencha o preço do serviço');\r\n            return;\r\n        }\r\n\r\n        db.transaction(function (tx) {\r\n            tx.executeSql(\r\n                'INSERT INTO table_tipo_servico (nome_servico, preco_servico) VALUES (?,?)',\r\n                [nomeServico, precoServico],\r\n                (tx, results) => {\r\n                    console.log('Results', results.rowsAffected);\r\n                    if (results.rowsAffected > 0) {\r\n                        Alert.alert(\r\n                            'Sucesso',\r\n                            'Tipo de Serviço Registrado com Sucesso !!!',\r\n                            [\r\n                                {\r\n                                    text: 'Ok',\r\n                                    onPress: () => navigation.navigate('HomeScreenTipoServico'),\r\n                                },\r\n                            ],\r\n                            { cancelable: false }\r\n                        );\r\n                    } else alert('Erro ao tentar Registrar o Tipo de Serviço !!!');\r\n                }\r\n            );\r\n        });\r\n    };\r\n\r\n    return (\r\n        <SafeAreaView style={{ flex: 1 }}>\r\n            <View style={{ flex: 1, backgroundColor: 'white' }}>\r\n                <View style={{ flex: 1 }}>\r\n                    <ScrollView keyboardShouldPersistTaps=\"handled\">\r\n                        <KeyboardAvoidingView\r\n                            behavior=\"padding\"\r\n                            style={{ flex: 1, justifyContent: 'space-between' }}>\r\n                            <Mytextinput\r\n                                placeholder=\"Nome do Serviço\"\r\n                                onChangeText={\r\n                                    (nomeServico) => setNomeServico(nomeServico)\r\n                                }\r\n                                style={{ padding: 10 }}\r\n                            />\r\n\r\n                            <TextInputMask\r\n                                placeholder=\"Valor do Serviço R$\"\r\n                                type={'money'}\r\n                                style={styles.inputText}\r\n                                keyboardType=\"numeric\"\r\n                                blurOnSubmit={false}\r\n                                underlineColorAndroid=\"transparent\"\r\n                                placeholderTextColor=\"#00AD98\"\r\n                                options={{\r\n                                    // precision: 2,\r\n                                    // separator: '.',\r\n                                    // delimiter: '.',\r\n                                    // unit: 'R$',\r\n                                    // suffixUnit: ''\r\n                                }}\r\n                                value={precoServico}\r\n                                onChangeText={\r\n                                    (precoServico) => setPrecoServico(precoServico)\r\n                                }\r\n                            />\r\n                            <Mybutton title=\"Salvar\" customClick={register_user} />\r\n                        </KeyboardAvoidingView>\r\n                    </ScrollView>\r\n                </View>\r\n            </View>\r\n        </SafeAreaView>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    inputText: {\r\n        marginLeft: 25,\r\n        marginRight: 25,\r\n        marginTop: 10,\r\n        borderColor: '#00AD98',\r\n        borderWidth: 1,\r\n        height: 50,\r\n        padding: 10,\r\n        borderRadius: 20,\r\n    },\r\n});\r\n\r\nexport default RegisterTipoServico;"]},"metadata":{},"sourceType":"module"}