{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"F:\\\\Programas\\\\React\\\\Barbearia-reactnative\\\\src\\\\pages\\\\tipo-servico\\\\ViewTipoServico.js\";\n\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Mytext from \"../components/Mytext\";\nimport Mytextinput from \"../components/Mytextinput\";\nimport Mybutton from \"../components/Mybutton\";\nimport { DatabaseConnection } from \"../../database/database-connection\";\nvar db = DatabaseConnection.getConnection();\n\nvar ViewTipoServico = function ViewTipoServico() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      inputServicoId = _useState2[0],\n      setInputServicoId = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      servicoData = _useState4[0],\n      setServicoData = _useState4[1];\n\n  var searchUser = function searchUser() {\n    console.log(inputServicoId);\n    setServicoData({});\n    db.transaction(function (tx) {\n      tx.executeSql('SELECT * FROM table_tipo_servico where tipo_servico_id = ?', [inputServicoId], function (tx, results) {\n        var len = results.rows.length;\n        console.log('len', len);\n\n        if (len > 0) {\n          setServicoData(results.rows.item(0));\n        } else {\n          alert('Tipo de serviço não encontrado !');\n        }\n      });\n    });\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: {\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      backgroundColor: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, React.createElement(Mytext, {\n    text: \"Filtro de Tipo de Servi\\xE7o\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }), React.createElement(Mytextinput, {\n    placeholder: \"Entre com o C\\xF3digo do Tipo de Servi\\xE7o\",\n    onChangeText: function onChangeText(inputServicoId) {\n      return setInputServicoId(inputServicoId);\n    },\n    style: {\n      padding: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }), React.createElement(Mybutton, {\n    title: \"Buscar Tipo de Servi\\xE7o\",\n    customClick: searchUser,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }), React.createElement(View, {\n    style: {\n      marginLeft: 35,\n      marginRight: 35,\n      marginTop: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 25\n    }\n  }, \"C\\xF3digo : \", servicoData.tipo_servico_id), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 25\n    }\n  }, \"Nome Servi\\xE7o : \", servicoData.nome_servico), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 25\n    }\n  }, \"Pre\\xE7o do Servi\\xE7o : \", servicoData.preco_servico)))));\n};\n\nexport default ViewTipoServico;","map":{"version":3,"sources":["F:/Programas/React/Barbearia-reactnative/src/pages/tipo-servico/ViewTipoServico.js"],"names":["React","useState","Mytext","Mytextinput","Mybutton","DatabaseConnection","db","getConnection","ViewTipoServico","inputServicoId","setInputServicoId","servicoData","setServicoData","searchUser","console","log","transaction","tx","executeSql","results","len","rows","length","item","alert","flex","backgroundColor","padding","marginLeft","marginRight","marginTop","tipo_servico_id","nome_servico","preco_servico"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { Text, View, SafeAreaView } from 'react-native';\r\nimport Mytext from '../components/Mytext';\r\nimport Mytextinput from '../components/Mytextinput';\r\nimport Mybutton from '../components/Mybutton';\r\nimport { DatabaseConnection } from '../../database/database-connection';\r\n\r\nconst db = DatabaseConnection.getConnection();\r\n\r\nconst ViewTipoServico = () => {\r\n    let [inputServicoId, setInputServicoId] = useState('');\r\n    let [servicoData, setServicoData] = useState({});\r\n\r\n    let searchUser = () => {\r\n        console.log(inputServicoId);\r\n        setServicoData({});\r\n        db.transaction((tx) => {\r\n            tx.executeSql(\r\n                'SELECT * FROM table_tipo_servico where tipo_servico_id = ?',\r\n                [inputServicoId],\r\n                (tx, results) => {\r\n                    var len = results.rows.length;\r\n                    console.log('len', len);\r\n                    if (len > 0) {\r\n                        setServicoData(results.rows.item(0));\r\n                    } else {\r\n                        alert('Tipo de serviço não encontrado !');\r\n                    }\r\n                }\r\n            );\r\n        });\r\n    };\r\n\r\n    return (\r\n        <SafeAreaView style={{ flex: 1 }}>\r\n            <View style={{ flex: 1, backgroundColor: 'white' }}>\r\n                <View style={{ flex: 1 }}>\r\n                    <Mytext text=\"Filtro de Tipo de Serviço\" />\r\n                    <Mytextinput\r\n                        placeholder=\"Entre com o Código do Tipo de Serviço\"\r\n                        onChangeText={\r\n                            (inputServicoId) => setInputServicoId(inputServicoId)\r\n                        }\r\n                        style={{ padding: 10 }}\r\n                    />\r\n                    <Mybutton title=\"Buscar Tipo de Serviço\" customClick={searchUser} />\r\n                    <View\r\n                        style={{\r\n                            marginLeft: 35,\r\n                            marginRight: 35,\r\n                            marginTop: 10\r\n                        }}>\r\n                        <Text>Código : {servicoData.tipo_servico_id}</Text>\r\n                        <Text>Nome Serviço : {servicoData.nome_servico}</Text>\r\n                        <Text>Preço do Serviço : {servicoData.preco_servico}</Text>\r\n                    </View>\r\n                </View>\r\n            </View>\r\n        </SafeAreaView>\r\n    );\r\n};\r\n\r\nexport default ViewTipoServico;"]},"metadata":{},"sourceType":"module"}