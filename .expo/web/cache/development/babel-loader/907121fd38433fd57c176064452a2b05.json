{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"F:\\\\Programas\\\\React\\\\Barbearia-reactnative\\\\src\\\\pages\\\\servico-realizado\\\\RegisterServicoRealizado.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport Mytextinput from \"../components/Mytextinput\";\nimport Mybutton from \"../components/Mybutton\";\nimport { DatabaseConnection } from \"../../database/database-connection\";\nvar db = DatabaseConnection.getConnection();\n\nvar RegisterServicoRealizado = function RegisterServicoRealizado(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      nomeFuncionario = _useState2[0],\n      setFuncionario = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      nomeCliente = _useState4[0],\n      setNomeCliente = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      nomeServico = _useState6[0],\n      setNomeServico = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      precoServico = _useState8[0],\n      setPrecoServico = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      selectedValue = _useState10[0],\n      setSelectedValue = _useState10[1];\n\n  var listaFuncionarios = [];\n  useEffect(function () {\n    db.transaction(function (tx) {\n      tx.executeSql('SELECT * FROM table_funcionario', [], function (tx, results) {\n        var temp = [];\n\n        for (var i = 0; i < results.rows.length; ++i) {\n          listaFuncionarios.push(results.rows.item(i));\n        }\n      });\n    });\n  }, []);\n\n  var register_user = function register_user() {\n    console.log(nomeServico, precoServico, setNomeCliente, setFuncionario);\n\n    if (!nomeFuncionario) {\n      alert('Por favor preencha o nome do Funcionario!');\n      return;\n    }\n\n    if (!nomeCliente) {\n      alert('Por favor preencha o nome do Cliente!');\n      return;\n    }\n\n    if (!nomeServico) {\n      alert('Por favor preencha o nome do Serviço!');\n      return;\n    }\n\n    if (!precoServico) {\n      alert('Por favor preencha o preço do serviço!');\n      return;\n    }\n\n    db.transaction(function (tx) {\n      tx.executeSql('INSERT INTO table_servico_realizado (funcionario_nome, cliente_nome, nome_servico, preco_servico) VALUES (?,?)', [nomeServico, precoServico], function (tx, results) {\n        console.log('Results', results.rowsAffected);\n\n        if (results.rowsAffected > 0) {\n          Alert.alert('Sucesso', 'Serviço Realizado Registrado com Sucesso !!!', [{\n            text: 'Ok',\n            onPress: function onPress() {\n              return navigation.navigate('HomeScreenServicoRealizado');\n            }\n          }], {\n            cancelable: false\n          });\n        } else alert('Erro ao tentar Registrar o Serviço Realizado!!!');\n      });\n    });\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: {\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      backgroundColor: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }\n  }, React.createElement(Picker, {\n    selectedValue: selectedValue,\n    onValueChange: handleValueChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 21\n    }\n  }, listaFuncionarios.map(function (reg) {\n    return React.createElement(Picker.Item, {\n      label: reg.currencyLabel,\n      value: reg.currency,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 33\n      }\n    });\n  })), React.createElement(ScrollView, {\n    keyboardShouldPersistTaps: \"handled\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 21\n    }\n  }, React.createElement(KeyboardAvoidingView, {\n    behavior: \"padding\",\n    style: {\n      flex: 1,\n      justifyContent: 'space-between'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 25\n    }\n  }, React.createElement(Mytextinput, {\n    placeholder: \"Entre com o Nome do Funcion\\xE1rio\",\n    onChangeText: function onChangeText(nomeFuncionario) {\n      return setFuncionario(nomeFuncionario);\n    },\n    style: {\n      padding: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 29\n    }\n  }), React.createElement(Mytextinput, {\n    placeholder: \"Entre com o Nome do Cliente\",\n    onChangeText: function onChangeText(nomeCliente) {\n      return setNomeCliente(nomeCliente);\n    },\n    style: {\n      padding: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 29\n    }\n  }), React.createElement(Mytextinput, {\n    placeholder: \"Entre com o Nome do Servi\\xE7o\",\n    onChangeText: function onChangeText(nomeServico) {\n      return setNomeServico(nomeServico);\n    },\n    style: {\n      padding: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 29\n    }\n  }), React.createElement(Mytextinput, {\n    placeholder: \"Entre com o valor do servi\\xE7o\",\n    onChangeText: function onChangeText(precoServico) {\n      return setPrecoServico(precoServico);\n    },\n    maxLength: 11,\n    keyboardType: \"numeric\",\n    style: {\n      padding: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 29\n    }\n  }), React.createElement(Mybutton, {\n    title: \"Salvar\",\n    customClick: register_user,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 29\n    }\n  }))))));\n};\n\nexport default RegisterServicoRealizado;","map":{"version":3,"sources":["F:/Programas/React/Barbearia-reactnative/src/pages/servico-realizado/RegisterServicoRealizado.js"],"names":["React","useState","useEffect","Mytextinput","Mybutton","DatabaseConnection","db","getConnection","RegisterServicoRealizado","navigation","nomeFuncionario","setFuncionario","nomeCliente","setNomeCliente","nomeServico","setNomeServico","precoServico","setPrecoServico","selectedValue","setSelectedValue","listaFuncionarios","transaction","tx","executeSql","results","temp","i","rows","length","push","item","register_user","console","log","alert","rowsAffected","Alert","text","onPress","navigate","cancelable","flex","backgroundColor","handleValueChange","map","reg","currencyLabel","currency","justifyContent","padding"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n    View,\r\n    ScrollView,\r\n    KeyboardAvoidingView,\r\n    Alert,\r\n    SafeAreaView,\r\n    Picker\r\n} from 'react-native';\r\nimport Mytextinput from '../components/Mytextinput';\r\nimport Mybutton from '../components/Mybutton';\r\nimport { DatabaseConnection } from '../../database/database-connection';\r\n\r\nconst db = DatabaseConnection.getConnection();\r\n\r\n\r\n\r\nconst RegisterServicoRealizado = ({ navigation }) => {\r\n    let [nomeFuncionario, setFuncionario] = useState('');\r\n    let [nomeCliente, setNomeCliente] = useState('');\r\n    let [nomeServico, setNomeServico] = useState('');\r\n    let [precoServico, setPrecoServico] = useState('')\r\n\r\n    let [selectedValue, setSelectedValue] = useState('');\r\n    let listaFuncionarios = [];\r\n\r\n\r\n      useEffect(() => {\r\n        db.transaction((tx) => {\r\n          tx.executeSql(\r\n            'SELECT * FROM table_funcionario',\r\n            [],\r\n            (tx, results) => {\r\n              var temp = [];\r\n              for (let i = 0; i < results.rows.length; ++i)\r\n                listaFuncionarios.push(results.rows.item(i));\r\n            }\r\n          );\r\n        });\r\n      }, []);\r\n\r\n\r\n\r\n\r\n\r\n    let register_user = () => {\r\n        console.log(nomeServico, precoServico, setNomeCliente, setFuncionario);\r\n\r\n        if (!nomeFuncionario) {\r\n            alert('Por favor preencha o nome do Funcionario!');\r\n            return;\r\n        }\r\n        if (!nomeCliente) {\r\n            alert('Por favor preencha o nome do Cliente!');\r\n            return;\r\n        }\r\n        if (!nomeServico) {\r\n            alert('Por favor preencha o nome do Serviço!');\r\n            return;\r\n        }\r\n        if (!precoServico) {\r\n            alert('Por favor preencha o preço do serviço!');\r\n            return;\r\n        }\r\n            db.transaction(function (tx) {\r\n            tx.executeSql(\r\n                'INSERT INTO table_servico_realizado (funcionario_nome, cliente_nome, nome_servico, preco_servico) VALUES (?,?)',\r\n                [nomeServico, precoServico],\r\n                (tx, results) => {\r\n                    console.log('Results', results.rowsAffected);\r\n                    if (results.rowsAffected > 0) {\r\n                        Alert.alert(\r\n                            'Sucesso',\r\n                            'Serviço Realizado Registrado com Sucesso !!!',\r\n                            [\r\n                                {\r\n                                    text: 'Ok',\r\n                                    onPress: () => navigation.navigate('HomeScreenServicoRealizado'),\r\n                                },\r\n                            ],\r\n                            { cancelable: false }\r\n                        );\r\n                    } else alert('Erro ao tentar Registrar o Serviço Realizado!!!');\r\n                }\r\n            );\r\n        });\r\n    };\r\n\r\n//      let listItemView = (item) => {\r\n//        return (\r\n//          <View\r\n//            key={item.funcionario_id}\r\n//            style={{ backgroundColor: '#EEE', marginTop: 20, padding: 30, borderRadius: 10 }}>\r\n//            <Text style={styles.textheader}>Código</Text>\r\n//            <Text style={styles.textbottom}>{item.funcionario_id}</Text>\r\n//\r\n//            <Text style={styles.textheader}>Nome</Text>\r\n//            <Text style={styles.textbottom}>{item.funcionario_nome}</Text>\r\n//\r\n//            <Text style={styles.textheader}>Contato</Text>\r\n//            <Text style={styles.textbottom}>{item.funcionario_telefone}</Text>\r\n//\r\n//\r\n//          </View>\r\n//        );\r\n//      };\r\n\r\n//        return (\r\n//          <SafeAreaView style={{ flex: 1 }}>\r\n//            <View style={{ flex: 1, backgroundColor: 'white' }}>\r\n//              <View style={{ flex: 1 }}>\r\n//                <FlatList\r\n//                  style={{ marginTop: 30 }}\r\n//                  contentContainerStyle={{ paddingHorizontal: 20 }}\r\n//                  data={flatListItems}\r\n//                  keyExtractor={(item, index) => index.toString()}\r\n//                  renderItem={({ item }) => listItemView(item)}\r\n//                />\r\n//              </View> 3\r\n//            </View>\r\n//          </SafeAreaView>\r\n//        );\r\n\r\n    return (\r\n        <SafeAreaView style={{flex: 1}}>\r\n            <View style={{flex: 1, backgroundColor: 'white'}}>\r\n                <View style={{flex: 1}}>\r\n\r\n                    {/*<Picker*/}\r\n                    {/*    selectedValue={selectedValue}*/}\r\n                    {/*    style={{ height: 50, width: 150 }}*/}\r\n                    {/*    onValueChange={(itemValue, itemIndex) => setSelectedValue(itemValue)}*/}\r\n                    {/*>*/}\r\n                    {/*    <Picker.Item label=\"Java\" value=\"java\" />*/}\r\n                    {/*    <Picker.Item label=\"JavaScript\" value=\"js\" />*/}\r\n                    {/*</Picker>*/}\r\n\r\n                    <Picker\r\n                        selectedValue={selectedValue}\r\n                        onValueChange={handleValueChange}>\r\n                        {\r\n                            listaFuncionarios.map( reg =>\r\n                                <Picker.Item label={reg.currencyLabel} value={reg.currency}/>\r\n                            )\r\n                        }\r\n                    </Picker>\r\n\r\n                    <ScrollView keyboardShouldPersistTaps=\"handled\">\r\n\r\n                        <KeyboardAvoidingView\r\n                            behavior=\"padding\"\r\n                            style={{flex: 1, justifyContent: 'space-between'}}>\r\n\r\n                            <Mytextinput\r\n                                placeholder=\"Entre com o Nome do Funcionário\"\r\n                                onChangeText={\r\n                                    (nomeFuncionario) => setFuncionario(nomeFuncionario)\r\n                                }\r\n                                style={{padding: 10}}\r\n                            />\r\n                            <Mytextinput\r\n                                placeholder=\"Entre com o Nome do Cliente\"\r\n                                onChangeText={\r\n                                    (nomeCliente) => setNomeCliente(nomeCliente)\r\n                                }\r\n                                style={{padding: 10}}\r\n                            />\r\n                            <Mytextinput\r\n                                placeholder=\"Entre com o Nome do Serviço\"\r\n                                onChangeText={\r\n                                    (nomeServico) => setNomeServico(nomeServico)\r\n                                }\r\n                                style={{padding: 10}}\r\n                            />\r\n                            <Mytextinput\r\n                                placeholder=\"Entre com o valor do serviço\"\r\n                                onChangeText={\r\n                                    (precoServico) => setPrecoServico(precoServico)\r\n                                }\r\n                                maxLength={11}\r\n                                keyboardType=\"numeric\"\r\n                                style={{padding: 10}}\r\n                            />\r\n                            <Mybutton title=\"Salvar\" customClick={register_user}/>\r\n                        </KeyboardAvoidingView>\r\n                    </ScrollView>\r\n                </View>\r\n            </View>\r\n        </SafeAreaView>\r\n    );\r\n};\r\n\r\n// const styles = StyleSheet.create({\r\n//   textheader: {\r\n//     color: '#111',\r\n//     fontSize: 12,\r\n//     fontWeight: '700',\r\n//\r\n//   },\r\n//   textbottom: {\r\n//     color: '#111',\r\n//     fontSize: 18,\r\n//   },\r\n// });\r\n\r\nexport default RegisterServicoRealizado;"]},"metadata":{},"sourceType":"module"}