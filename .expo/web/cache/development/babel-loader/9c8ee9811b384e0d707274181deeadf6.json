{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { DatabaseConnection } from \"../../database/database-connection\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar db = DatabaseConnection.getConnection();\n\nvar RelatorioServicoRealizado = function RelatorioServicoRealizado() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      flatListServicos = _useState2[0],\n      setFlatListServicos = _useState2[1];\n\n  useEffect(function () {\n    db.transaction(function (tx) {\n      tx.executeSql('SELECT tf.funcionario_nome, tts.preco_servico FROM table_servico_realizado tbs, table_funcionario tf, table_tipo_servico tts  WHERE tbs.funcionario_id = tf.funcionario_id  AND tbs.tipo_servico_id = tts.tipo_servico_id GROUP BY tf.funcionario_id', [], function (tx, results) {\n        var temp = [];\n\n        for (var i = 0; i < results.rows.length; ++i) {\n          temp.push(results.rows.item(i));\n        }\n\n        setFlatListServicos(temp);\n      });\n    });\n  }, []);\n  console.log(flatListServicos);\n\n  var listItemView = function listItemView(tipoServico) {\n    return _jsxs(View, {\n      style: {\n        backgroundColor: '#EEE',\n        marginTop: 20,\n        padding: 30,\n        borderRadius: 10\n      },\n      children: [_jsx(Text, {\n        style: styles.textheader,\n        children: \"Nome do Funcion\\xE1rio\"\n      }), _jsx(Text, {\n        style: styles.textbottom,\n        children: tipoServico.funcionario_nome\n      }), _jsx(Text, {\n        style: styles.textheader,\n        children: \"Ganho Total por Funcion\\xE1rio\"\n      }), _jsx(Text, {\n        style: styles.textbottom,\n        children: tipoServico.preco_servico\n      })]\n    }, tipoServico.servico_realizado_id);\n  };\n\n  return _jsx(SafeAreaView, {\n    style: {\n      flex: 1\n    },\n    children: _jsx(View, {\n      style: {\n        flex: 1,\n        backgroundColor: 'white'\n      },\n      children: _jsx(View, {\n        style: {\n          flex: 1\n        },\n        children: _jsx(FlatList, {\n          style: {\n            marginTop: 30\n          },\n          contentContainerStyle: {\n            paddingHorizontal: 20\n          },\n          data: flatListServicos,\n          keyExtractor: function keyExtractor(item, index) {\n            return index.toString();\n          },\n          renderItem: function renderItem(_ref) {\n            var item = _ref.item;\n            return listItemView(item);\n          }\n        })\n      })\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  textheader: {\n    color: '#111',\n    fontSize: 12,\n    fontWeight: '700'\n  },\n  textbottom: {\n    color: '#111',\n    fontSize: 18\n  }\n});\nexport default RelatorioServicoRealizado;","map":{"version":3,"sources":["F:/Programas/React/Barbearia-reactnative/src/pages/servico-realizado/RelatorioServicoRealizado.js"],"names":["React","useState","useEffect","DatabaseConnection","db","getConnection","RelatorioServicoRealizado","flatListServicos","setFlatListServicos","transaction","tx","executeSql","results","temp","i","rows","length","push","item","console","log","listItemView","tipoServico","backgroundColor","marginTop","padding","borderRadius","styles","textheader","textbottom","funcionario_nome","preco_servico","servico_realizado_id","flex","paddingHorizontal","index","toString","StyleSheet","create","color","fontSize","fontWeight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { FlatList, Text, View, SafeAreaView, StyleSheet } from 'react-native';\r\nimport { DatabaseConnection } from '../../database/database-connection';\r\n\r\nconst db = DatabaseConnection.getConnection();\r\n\r\nconst RelatorioServicoRealizado = () => {\r\n    let [flatListServicos, setFlatListServicos] = useState([]);\r\n\r\n    useEffect(() => {\r\n        db.transaction((tx) => {\r\n            tx.executeSql(\r\n                'SELECT tf.funcionario_nome, tts.preco_servico FROM table_servico_realizado tbs, table_funcionario tf, table_tipo_servico tts  WHERE tbs.funcionario_id = tf.funcionario_id  AND tbs.tipo_servico_id = tts.tipo_servico_id GROUP BY tf.funcionario_id',\r\n                [],\r\n                (tx, results) => {\r\n                    var temp = [];\r\n                    for (let i = 0; i < results.rows.length; ++i)\r\n                        temp.push(results.rows.item(i));\r\n                    setFlatListServicos(temp);\r\n                }\r\n            );\r\n        });\r\n    }, []);\r\n\r\n        console.log(flatListServicos)\r\n        let listItemView = (tipoServico) => {\r\n        return (\r\n            <View\r\n                key={tipoServico.servico_realizado_id}\r\n                style={{ backgroundColor: '#EEE', marginTop: 20, padding: 30, borderRadius: 10 }}>\r\n                <Text style={styles.textheader}>Nome do Funcionário</Text>\r\n                <Text style={styles.textbottom}>{tipoServico.funcionario_nome}</Text>\r\n\r\n                <Text style={styles.textheader}>Ganho Total por Funcionário</Text>\r\n                <Text style={styles.textbottom}>{tipoServico.preco_servico}</Text>\r\n\r\n            </View>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <SafeAreaView style={{ flex: 1 }}>\r\n            <View style={{ flex: 1, backgroundColor: 'white' }}>\r\n                <View style={{ flex: 1 }}>\r\n                    <FlatList\r\n                        style={{ marginTop: 30 }}\r\n                        contentContainerStyle={{ paddingHorizontal: 20 }}\r\n                        data={flatListServicos}\r\n                        keyExtractor={(item, index) => index.toString()}\r\n                        renderItem={({ item }) => listItemView(item)}\r\n                    />\r\n                </View>\r\n            </View>\r\n        </SafeAreaView>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    textheader: {\r\n        color: '#111',\r\n        fontSize: 12,\r\n        fontWeight: '700',\r\n\r\n    },\r\n    textbottom: {\r\n        color: '#111',\r\n        fontSize: 18,\r\n    },\r\n});\r\n\r\nexport default RelatorioServicoRealizado;"]},"metadata":{},"sourceType":"module"}