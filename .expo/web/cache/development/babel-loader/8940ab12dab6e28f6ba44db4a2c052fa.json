{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"F:\\\\Programas\\\\React\\\\Barbearia-reactnative\\\\src\\\\pages\\\\tipo-servico\\\\RegisterTipoServico.js\";\n\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Mytextinput from \"../components/Mytextinput\";\nimport Mybutton from \"../components/Mybutton\";\nimport { DatabaseConnection } from \"../../database/database-connection\";\nvar db = DatabaseConnection.getConnection();\n\nvar RegisterTipoServico = function RegisterTipoServico(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      nomeServico = _useState2[0],\n      setNomeServico = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      precoServico = _useState4[0],\n      setPrecoServico = _useState4[1];\n\n  var register_user = function register_user() {\n    console.log(nomeServico, precoServico);\n\n    if (!nomeServico) {\n      alert('Por favor preencha o nome do serviço !');\n      return;\n    }\n\n    if (!precoServico) {\n      alert('Por favor preencha o preço do serviço');\n      return;\n    }\n\n    db.transaction(function (tx) {\n      tx.executeSql('INSERT INTO table_tipo_servico (nome_servico, preco_servico) VALUES (?,?)', [nomeServico, precoServico], function (tx, results) {\n        console.log('Results', results.rowsAffected);\n\n        if (results.rowsAffected > 0) {\n          Alert.alert('Sucesso', 'Tipo de Serviço Registrado com Sucesso !!!', [{\n            text: 'Ok',\n            onPress: function onPress() {\n              return navigation.navigate('HomeScreen');\n            }\n          }], {\n            cancelable: false\n          });\n        } else alert('Erro ao tentar Registrar o Tipo de Serviço !!!');\n      });\n    });\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: {\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      backgroundColor: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, React.createElement(ScrollView, {\n    keyboardShouldPersistTaps: \"handled\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  }, React.createElement(KeyboardAvoidingView, {\n    behavior: \"padding\",\n    style: {\n      flex: 1,\n      justifyContent: 'space-between'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 25\n    }\n  }, React.createElement(Mytextinput, {\n    placeholder: \"Entre com o Nome do Servi\\xE7o\",\n    onChangeText: function onChangeText(nomeServico) {\n      return setnomeServico(nomeServico);\n    },\n    style: {\n      padding: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 29\n    }\n  }), React.createElement(Mytextinput, {\n    placeholder: \"Entre com o valor do servi\\xE7o\",\n    onChangeText: function onChangeText(precoServico) {\n      return setprecoServico(precoServico);\n    },\n    maxLength: 11,\n    keyboardType: \"numeric\",\n    style: {\n      padding: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 29\n    }\n  }), React.createElement(Mybutton, {\n    title: \"Salvar\",\n    customClick: register_user,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 29\n    }\n  }))))));\n};\n\nexport default RegisterTipoServico;","map":{"version":3,"sources":["F:/Programas/React/Barbearia-reactnative/src/pages/tipo-servico/RegisterTipoServico.js"],"names":["React","useState","Mytextinput","Mybutton","DatabaseConnection","db","getConnection","RegisterTipoServico","navigation","nomeServico","setNomeServico","precoServico","setPrecoServico","register_user","console","log","alert","transaction","tx","executeSql","results","rowsAffected","Alert","text","onPress","navigate","cancelable","flex","backgroundColor","justifyContent","setnomeServico","padding","setprecoServico"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n    View,\r\n    ScrollView,\r\n    KeyboardAvoidingView,\r\n    Alert,\r\n    SafeAreaView,\r\n} from 'react-native';\r\nimport Mytextinput from '../components/Mytextinput';\r\nimport Mybutton from '../components/Mybutton';\r\nimport { DatabaseConnection } from '../../database/database-connection';\r\n\r\nconst db = DatabaseConnection.getConnection();\r\n\r\nconst RegisterTipoServico = ({ navigation }) => {\r\n    let [nomeServico, setNomeServico] = useState('');\r\n    let [precoServico, setPrecoServico] = useState('');\r\n\r\n\r\n    let register_user = () => {\r\n        console.log(nomeServico, precoServico);\r\n\r\n        if (!nomeServico) {\r\n            alert('Por favor preencha o nome do serviço !');\r\n            return;\r\n        }\r\n        if (!precoServico) {\r\n            alert('Por favor preencha o preço do serviço');\r\n            return;\r\n        }\r\n\r\n        db.transaction(function (tx) {\r\n            tx.executeSql(\r\n                'INSERT INTO table_tipo_servico (nome_servico, preco_servico) VALUES (?,?)',\r\n                [nomeServico, precoServico],\r\n                (tx, results) => {\r\n                    console.log('Results', results.rowsAffected);\r\n                    if (results.rowsAffected > 0) {\r\n                        Alert.alert(\r\n                            'Sucesso',\r\n                            'Tipo de Serviço Registrado com Sucesso !!!',\r\n                            [\r\n                                {\r\n                                    text: 'Ok',\r\n                                    onPress: () => navigation.navigate('HomeScreen'),\r\n                                },\r\n                            ],\r\n                            { cancelable: false }\r\n                        );\r\n                    } else alert('Erro ao tentar Registrar o Tipo de Serviço !!!');\r\n                }\r\n            );\r\n        });\r\n    };\r\n\r\n    return (\r\n        <SafeAreaView style={{ flex: 1 }}>\r\n            <View style={{ flex: 1, backgroundColor: 'white' }}>\r\n                <View style={{ flex: 1 }}>\r\n                    <ScrollView keyboardShouldPersistTaps=\"handled\">\r\n                        <KeyboardAvoidingView\r\n                            behavior=\"padding\"\r\n                            style={{ flex: 1, justifyContent: 'space-between' }}>\r\n                            <Mytextinput\r\n                                placeholder=\"Entre com o Nome do Serviço\"\r\n                                onChangeText={\r\n                                    (nomeServico) => setnomeServico(nomeServico)\r\n                                }\r\n                                style={{ padding: 10 }}\r\n                            />\r\n                            <Mytextinput\r\n                                placeholder=\"Entre com o valor do serviço\"\r\n                                onChangeText={\r\n                                    (precoServico) => setprecoServico(precoServico)\r\n                                }\r\n                                maxLength={11}\r\n                                keyboardType=\"numeric\"\r\n                                style={{ padding: 10 }}\r\n                            />\r\n                            <Mybutton title=\"Salvar\" customClick={register_user} />\r\n                        </KeyboardAvoidingView>\r\n                    </ScrollView>\r\n                </View>\r\n            </View>\r\n        </SafeAreaView>\r\n    );\r\n};\r\n\r\nexport default RegisterTipoServico;"]},"metadata":{},"sourceType":"module"}