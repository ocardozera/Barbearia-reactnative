{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Mytextinput from \"../components/Mytextinput\";\nimport Mybutton from \"../components/Mybutton\";\nimport { DatabaseConnection } from \"../../database/database-connection\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar db = DatabaseConnection.getConnection();\n\nvar ViewFuncionario = function ViewFuncionario() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      inputUserId = _useState2[0],\n      setInputUserId = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      userData = _useState4[0],\n      setUserData = _useState4[1];\n\n  var searchUser = function searchUser() {\n    setUserData({});\n    db.transaction(function (tx) {\n      tx.executeSql('SELECT * FROM table_funcionario where funcionario_id = ?', [inputUserId], function (tx, results) {\n        var len = results.rows.length;\n        console.log('len', len);\n\n        if (len > 0) {\n          setUserData(results.rows.item(0));\n        } else {\n          alert('Funcionario não encontrado !');\n        }\n      });\n    });\n  };\n\n  return _jsx(SafeAreaView, {\n    style: {\n      flex: 1\n    },\n    children: _jsx(View, {\n      style: {\n        flex: 1,\n        backgroundColor: 'white'\n      },\n      children: _jsxs(View, {\n        style: {\n          flex: 1\n        },\n        children: [_jsx(Mytextinput, {\n          placeholder: \"Digite o C\\xF3digo do Funcion\\xE1rio\",\n          style: {\n            padding: 10\n          },\n          onChangeText: function onChangeText(inputUserId) {\n            return setInputUserId(inputUserId);\n          },\n          style: {\n            padding: 10\n          }\n        }), _jsx(Mybutton, {\n          title: \"Buscar Funcion\\xE1rio\",\n          customClick: searchUser\n        }), _jsxs(View, {\n          style: {\n            marginLeft: 35,\n            marginRight: 35,\n            marginTop: 10\n          },\n          children: [_jsxs(Text, {\n            style: {\n              fontSize: 18\n            },\n            children: [\"C\\xF3digo : \", userData.funcionario_id]\n          }), _jsxs(Text, {\n            style: {\n              fontSize: 18\n            },\n            children: [\"Nome : \", userData.funcionario_nome]\n          }), _jsxs(Text, {\n            style: {\n              fontSize: 18\n            },\n            children: [\"Telefone : \", userData.funcionario_telefone]\n          })]\n        })]\n      })\n    })\n  });\n};\n\nexport default ViewFuncionario;","map":{"version":3,"sources":["F:/Programas/React/Barbearia-reactnative/src/pages/funcionario/ViewFuncionario.js"],"names":["React","useState","Mytextinput","Mybutton","DatabaseConnection","db","getConnection","ViewFuncionario","inputUserId","setInputUserId","userData","setUserData","searchUser","transaction","tx","executeSql","results","len","rows","length","console","log","item","alert","flex","backgroundColor","padding","marginLeft","marginRight","marginTop","fontSize","funcionario_id","funcionario_nome","funcionario_telefone"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAEA,OAAOC,WAAP;AACA,OAAOC,QAAP;AACA,SAASC,kBAAT;;;AAEA,IAAMC,EAAE,GAAGD,kBAAkB,CAACE,aAAnB,EAAX;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAAA,kBACQN,QAAQ,CAAC,EAAD,CADhB;AAAA;AAAA,MACvBO,WADuB;AAAA,MACVC,cADU;;AAAA,mBAEER,QAAQ,CAAC,EAAD,CAFV;AAAA;AAAA,MAEvBS,QAFuB;AAAA,MAEbC,WAFa;;AAI5B,MAAIC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACrBD,IAAAA,WAAW,CAAC,EAAD,CAAX;AACAN,IAAAA,EAAE,CAACQ,WAAH,CAAe,UAACC,EAAD,EAAQ;AACrBA,MAAAA,EAAE,CAACC,UAAH,CACE,0DADF,EAEE,CAACP,WAAD,CAFF,EAGE,UAACM,EAAD,EAAKE,OAAL,EAAiB;AACf,YAAIC,GAAG,GAAGD,OAAO,CAACE,IAAR,CAAaC,MAAvB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBJ,GAAnB;;AACA,YAAIA,GAAG,GAAG,CAAV,EAAa;AACXN,UAAAA,WAAW,CAACK,OAAO,CAACE,IAAR,CAAaI,IAAb,CAAkB,CAAlB,CAAD,CAAX;AACD,SAFD,MAEO;AACLC,UAAAA,KAAK,CAAC,8BAAD,CAAL;AACD;AACF,OAXH;AAaD,KAdD;AAeD,GAjBD;;AAmBA,SAEE,KAAC,YAAD;AAAc,IAAA,KAAK,EAAE;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAArB;AAAA,cACE,KAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEA,QAAAA,IAAI,EAAE,CAAR;AAAWC,QAAAA,eAAe,EAAE;AAA5B,OAAb;AAAA,gBACE,MAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAED,UAAAA,IAAI,EAAE;AAAR,SAAb;AAAA,mBACE,KAAC,WAAD;AACE,UAAA,WAAW,EAAC,sCADd;AAEE,UAAA,KAAK,EAAE;AAAEE,YAAAA,OAAO,EAAE;AAAX,WAFT;AAGE,UAAA,YAAY,EACV,sBAAClB,WAAD;AAAA,mBAAiBC,cAAc,CAACD,WAAD,CAA/B;AAAA,WAJJ;AAME,UAAA,KAAK,EAAE;AAAEkB,YAAAA,OAAO,EAAE;AAAX;AANT,UADF,EASE,KAAC,QAAD;AAAU,UAAA,KAAK,EAAC,uBAAhB;AAAqC,UAAA,WAAW,EAAEd;AAAlD,UATF,EAUE,MAAC,IAAD;AACE,UAAA,KAAK,EAAE;AACLe,YAAAA,UAAU,EAAE,EADP;AAELC,YAAAA,WAAW,EAAE,EAFR;AAGLC,YAAAA,SAAS,EAAE;AAHN,WADT;AAAA,qBAME,MAAC,IAAD;AAAM,YAAA,KAAK,EAAE;AAAEC,cAAAA,QAAQ,EAAE;AAAZ,aAAb;AAAA,uCAAyCpB,QAAQ,CAACqB,cAAlD;AAAA,YANF,EAOE,MAAC,IAAD;AAAM,YAAA,KAAK,EAAE;AAAED,cAAAA,QAAQ,EAAE;AAAZ,aAAb;AAAA,kCAAsCpB,QAAQ,CAACsB,gBAA/C;AAAA,YAPF,EAQE,MAAC,IAAD;AAAM,YAAA,KAAK,EAAE;AAAEF,cAAAA,QAAQ,EAAE;AAAZ,aAAb;AAAA,sCAA2CpB,QAAQ,CAACuB,oBAApD;AAAA,YARF;AAAA,UAVF;AAAA;AADF;AADF,IAFF;AA4BD,CAnDD;;AAqDA,eAAe1B,eAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { Text, View, SafeAreaView } from 'react-native';\r\nimport Mytextinput from '../components/Mytextinput';\r\nimport Mybutton from '../components/Mybutton';\r\nimport { DatabaseConnection } from '../../database/database-connection';\r\n\r\nconst db = DatabaseConnection.getConnection();\r\n\r\nconst ViewFuncionario = () => {\r\n  let [inputUserId, setInputUserId] = useState('');\r\n  let [userData, setUserData] = useState({});\r\n\r\n  let searchUser = () => {\r\n    setUserData({});\r\n    db.transaction((tx) => {\r\n      tx.executeSql(\r\n        'SELECT * FROM table_funcionario where funcionario_id = ?',\r\n        [inputUserId],\r\n        (tx, results) => {\r\n          var len = results.rows.length;\r\n          console.log('len', len);\r\n          if (len > 0) {\r\n            setUserData(results.rows.item(0));\r\n          } else {\r\n            alert('Funcionario não encontrado !');\r\n          }\r\n        }\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n\r\n    <SafeAreaView style={{ flex: 1 }}>\r\n      <View style={{ flex: 1, backgroundColor: 'white' }}>\r\n        <View style={{ flex: 1 }}>\r\n          <Mytextinput\r\n            placeholder=\"Digite o Código do Funcionário\"\r\n            style={{ padding: 10 }}\r\n            onChangeText={\r\n              (inputUserId) => setInputUserId(inputUserId)\r\n            }\r\n            style={{ padding: 10 }}\r\n          />\r\n          <Mybutton title=\"Buscar Funcionário\" customClick={searchUser} />\r\n          <View\r\n            style={{\r\n              marginLeft: 35,\r\n              marginRight: 35,\r\n              marginTop: 10\r\n            }}>\r\n            <Text style={{ fontSize: 18 }}>Código : {userData.funcionario_id}</Text>\r\n            <Text style={{ fontSize: 18}}>Nome : {userData.funcionario_nome}</Text>\r\n            <Text style={{ fontSize: 18 }}>Telefone : {userData.funcionario_telefone}</Text>\r\n          </View>\r\n        </View>\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nexport default ViewFuncionario;"]},"metadata":{},"sourceType":"module"}