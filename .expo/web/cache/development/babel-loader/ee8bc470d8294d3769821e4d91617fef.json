{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"F:\\\\Programas\\\\React\\\\Barbearia-reactnative\\\\src\\\\pages\\\\servico-realizado\\\\RegisterServicoRealizado.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport Mytextinput from \"../components/Mytextinput\";\nimport Mybutton from \"../components/Mybutton\";\nimport { DatabaseConnection } from \"../../database/database-connection\";\nvar db = DatabaseConnection.getConnection();\nvar listaFuncionarios = [];\n\nvar buscaFuncionarios = function buscaFuncionarios() {\n  if (listaFuncionarios.length == 0) {\n    useEffect(function () {\n      db.transaction(function (tx) {\n        tx.executeSql('SELECT * FROM table_funcionario', [], function (tx, results) {\n          var temp = [];\n\n          for (var i = 0; i < results.rows.length; ++i) {\n            listaFuncionarios.push(results.rows.item(i));\n          }\n        });\n      });\n    }, []);\n  }\n};\n\nvar RegisterServicoRealizado = function RegisterServicoRealizado(_ref) {\n  var navigation = _ref.navigation;\n  buscaFuncionarios();\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      nomeFuncionario = _useState2[0],\n      setFuncionario = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      nomeCliente = _useState4[0],\n      setNomeCliente = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      nomeServico = _useState6[0],\n      setNomeServico = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      precoServico = _useState8[0],\n      setPrecoServico = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      selectedValue = _useState10[0],\n      setSelectedValue = _useState10[1];\n\n  var register_user = function register_user() {\n    console.log(nomeServico, precoServico, setNomeCliente, setFuncionario);\n\n    if (!nomeFuncionario) {\n      alert('Por favor preencha o nome do Funcionario!');\n      return;\n    }\n\n    if (!nomeCliente) {\n      alert('Por favor preencha o nome do Cliente!');\n      return;\n    }\n\n    if (!nomeServico) {\n      alert('Por favor preencha o nome do Serviço!');\n      return;\n    }\n\n    if (!precoServico) {\n      alert('Por favor preencha o preço do serviço!');\n      return;\n    }\n\n    db.transaction(function (tx) {\n      tx.executeSql('INSERT INTO table_servico_realizado (funcionario_nome, cliente_nome, nome_servico, preco_servico) VALUES (?,?)', [nomeServico, precoServico], function (tx, results) {\n        console.log('Results', results.rowsAffected);\n\n        if (results.rowsAffected > 0) {\n          Alert.alert('Sucesso', 'Serviço Realizado Registrado com Sucesso !!!', [{\n            text: 'Ok',\n            onPress: function onPress() {\n              return navigation.navigate('HomeScreenServicoRealizado');\n            }\n          }], {\n            cancelable: false\n          });\n        } else alert('Erro ao tentar Registrar o Serviço Realizado!!!');\n      });\n    });\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: {\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      backgroundColor: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }, React.createElement(ScrollView, {\n    keyboardShouldPersistTaps: \"handled\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }\n  }, React.createElement(KeyboardAvoidingView, {\n    behavior: \"padding\",\n    style: {\n      flex: 1,\n      justifyContent: 'space-between'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 25\n    }\n  }, React.createElement(Mytextinput, {\n    placeholder: \"Nome do Funcion\\xE1rio\",\n    onChangeText: function onChangeText(nomeFuncionario) {\n      return setFuncionario(nomeFuncionario);\n    },\n    style: {\n      padding: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 29\n    }\n  }), React.createElement(Mytextinput, {\n    placeholder: \"Nome do Cliente\",\n    onChangeText: function onChangeText(nomeCliente) {\n      return setNomeCliente(nomeCliente);\n    },\n    style: {\n      padding: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 29\n    }\n  }), React.createElement(Mytextinput, {\n    placeholder: \"Nome do Servi\\xE7o\",\n    onChangeText: function onChangeText(nomeServico) {\n      return setNomeServico(nomeServico);\n    },\n    style: {\n      padding: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 29\n    }\n  }), React.createElement(Mytextinput, {\n    placeholder: \"Valor do servi\\xE7o\",\n    onChangeText: function onChangeText(precoServico) {\n      return setPrecoServico(precoServico);\n    },\n    maxLength: 11,\n    keyboardType: \"numeric\",\n    style: {\n      padding: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 29\n    }\n  }), React.createElement(Mybutton, {\n    title: \"Salvar\",\n    customClick: register_user,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 29\n    }\n  }), React.createElement(Picker, {\n    style: {\n      height: 50,\n      width: 150\n    },\n    selectedValue: listaFuncionarios,\n    onValueChange: function onValueChange(itemValue, itemIndex) {\n      return setSelectedValue(itemValue);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 29\n    }\n  }, listaFuncionarios.map(function (v) {\n    return React.createElement(Picker.Item, {\n      label: v.funcionario_nome,\n      value: v.funcionario_id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 44\n      }\n    });\n  })))))));\n};\n\nexport default RegisterServicoRealizado;","map":{"version":3,"sources":["F:/Programas/React/Barbearia-reactnative/src/pages/servico-realizado/RegisterServicoRealizado.js"],"names":["React","useState","useEffect","Mytextinput","Mybutton","DatabaseConnection","db","getConnection","listaFuncionarios","buscaFuncionarios","length","transaction","tx","executeSql","results","temp","i","rows","push","item","RegisterServicoRealizado","navigation","nomeFuncionario","setFuncionario","nomeCliente","setNomeCliente","nomeServico","setNomeServico","precoServico","setPrecoServico","selectedValue","setSelectedValue","register_user","console","log","alert","rowsAffected","Alert","text","onPress","navigate","cancelable","flex","backgroundColor","justifyContent","padding","height","width","itemValue","itemIndex","map","v","funcionario_nome","funcionario_id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n    View,\r\n    ScrollView,\r\n    KeyboardAvoidingView,\r\n    Alert,\r\n    SafeAreaView,\r\n    Picker\r\n} from 'react-native';\r\nimport Mytextinput from '../components/Mytextinput';\r\nimport Mybutton from '../components/Mybutton';\r\nimport { DatabaseConnection } from '../../database/database-connection';\r\n\r\nconst db = DatabaseConnection.getConnection();\r\n\r\nconst listaFuncionarios = [];\r\n\r\nconst buscaFuncionarios = () => {\r\n    if (listaFuncionarios.length == 0) {\r\n        useEffect(() => {\r\n            db.transaction((tx) => {\r\n                tx.executeSql(\r\n                    'SELECT * FROM table_funcionario',\r\n                    [],\r\n                    (tx, results) => {\r\n                        var temp = [];\r\n                        for (let i = 0; i < results.rows.length; ++i)\r\n                            listaFuncionarios.push(results.rows.item(i));\r\n                    }\r\n                );\r\n            });\r\n        }, []);\r\n    }\r\n}\r\n\r\nconst RegisterServicoRealizado = ({navigation}) => {\r\n    buscaFuncionarios();\r\n\r\n    let [nomeFuncionario, setFuncionario] = useState('');\r\n    let [nomeCliente, setNomeCliente] = useState('');\r\n    let [nomeServico, setNomeServico] = useState('');\r\n    let [precoServico, setPrecoServico] = useState('')\r\n\r\n    let [selectedValue, setSelectedValue] = useState('');\r\n\r\n\r\n    let register_user = () => {\r\n        console.log(nomeServico, precoServico, setNomeCliente, setFuncionario);\r\n\r\n        if (!nomeFuncionario) {\r\n            alert('Por favor preencha o nome do Funcionario!');\r\n            return;\r\n        }\r\n        if (!nomeCliente) {\r\n            alert('Por favor preencha o nome do Cliente!');\r\n            return;\r\n        }\r\n        if (!nomeServico) {\r\n            alert('Por favor preencha o nome do Serviço!');\r\n            return;\r\n        }\r\n        if (!precoServico) {\r\n            alert('Por favor preencha o preço do serviço!');\r\n            return;\r\n        }\r\n        db.transaction(function (tx) {\r\n            tx.executeSql(\r\n                'INSERT INTO table_servico_realizado (funcionario_nome, cliente_nome, nome_servico, preco_servico) VALUES (?,?)',\r\n                [nomeServico, precoServico],\r\n                (tx, results) => {\r\n                    console.log('Results', results.rowsAffected);\r\n                    if (results.rowsAffected > 0) {\r\n                        Alert.alert(\r\n                            'Sucesso',\r\n                            'Serviço Realizado Registrado com Sucesso !!!',\r\n                            [\r\n                                {\r\n                                    text: 'Ok',\r\n                                    onPress: () => navigation.navigate('HomeScreenServicoRealizado'),\r\n                                },\r\n                            ],\r\n                            {cancelable: false}\r\n                        );\r\n                    } else alert('Erro ao tentar Registrar o Serviço Realizado!!!');\r\n                }\r\n            );\r\n        });\r\n    };\r\n\r\n    return (\r\n        <SafeAreaView style={{flex: 1}}>\r\n            <View style={{flex: 1, backgroundColor: 'white'}}>\r\n                <View style={{flex: 1}}>\r\n\r\n                    <ScrollView keyboardShouldPersistTaps=\"handled\">\r\n\r\n                        <KeyboardAvoidingView\r\n                            behavior=\"padding\"\r\n                            style={{flex: 1, justifyContent: 'space-between'}}>\r\n\r\n                            <Mytextinput\r\n                                placeholder=\"Nome do Funcionário\"\r\n                                onChangeText={\r\n                                    (nomeFuncionario) => setFuncionario(nomeFuncionario)\r\n                                }\r\n                                style={{padding: 10}}\r\n                            />\r\n                            <Mytextinput\r\n                                placeholder=\"Nome do Cliente\"\r\n                                onChangeText={\r\n                                    (nomeCliente) => setNomeCliente(nomeCliente)\r\n                                }\r\n                                style={{padding: 10}}\r\n                            />\r\n                            <Mytextinput\r\n                                placeholder=\"Nome do Serviço\"\r\n                                onChangeText={\r\n                                    (nomeServico) => setNomeServico(nomeServico)\r\n                                }\r\n                                style={{padding: 10}}\r\n                            />\r\n                            <Mytextinput\r\n                                placeholder=\"Valor do serviço\"\r\n                                onChangeText={\r\n                                    (precoServico) => setPrecoServico(precoServico)\r\n                                }\r\n                                maxLength={11}\r\n                                keyboardType=\"numeric\"\r\n                                style={{padding: 10}}\r\n                            />\r\n                            <Mybutton title=\"Salvar\" customClick={register_user}/>\r\n\r\n                            <Picker\r\n                                style={{height: 50, width: 150}}\r\n                                selectedValue={listaFuncionarios}\r\n                                onValueChange={(itemValue, itemIndex) => setSelectedValue(itemValue)}>{\r\n                                listaFuncionarios.map((v) => {\r\n                                    return <Picker.Item label={v.funcionario_nome} value={v.funcionario_id}/>\r\n                                })\r\n                            }\r\n                            </Picker>\r\n\r\n                        </KeyboardAvoidingView>\r\n                    </ScrollView>\r\n\r\n                </View>\r\n            </View>\r\n        </SafeAreaView>\r\n    );\r\n};\r\n\r\n// const styles = StyleSheet.create({\r\n//   textheader: {\r\n//     color: '#111',\r\n//     fontSize: 12,\r\n//     fontWeight: '700',\r\n//\r\n//   },\r\n//   textbottom: {\r\n//     color: '#111',\r\n//     fontSize: 18,\r\n//   },\r\n// });\r\n\r\nexport default RegisterServicoRealizado;"]},"metadata":{},"sourceType":"module"}